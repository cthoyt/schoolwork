#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 80 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 7 #"Monaco\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 9696 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 199
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |problem set 9 FINAL|) (read-case-sensitive #t) (teachpacks ()) (h"
 #"tdp-settings #(#t constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 38 #";; Hunrgry Henry and Honors Homework 9"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; Authors:"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   Charles Hoyt hoyt.ch@husky.neu.edu"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";;   Amanda Kerr  kerr.a@husky.neu.edu"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Hungry Henry"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";; Data Definitions and Constants"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"SCENE-PADDING"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 17 3 31 #";; global magnitude of velocity"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"HUMAN-PIC"
0 0 23 3 1 #" "
0 2          19 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\32\b"
 #"\6\0\0\0\255\277\234\363\0\0\6\370IDATH\211]\226Yl\234W\25"
 #"\307\177\367\336\357\233\361\254\36/3v"
 #"\274\20\307\211\2358n\342f!q\232\270YQ\35\n\25\2D\4\210n\244\""
 #"\242,\355\3\22Ry\202\27T\251 !\201\4\2\204\324\202Z\20\2\322\204\246"
 #"\201\240\204\244\302J\28\211S\333\261"
 #"\223x\231x\231\314x\231}\276\355\3620iZq^\256\256\256t\256\376\377s"
 #"\357\371\35\241\35\255]\0170A\3\322"
 #"\363\220\2\320\26\340\201P\340y\344\246\223\314LM\20\212\5Yu,:6m"
 #"'\34\255G\341\2\2\a\3]M\3\256\aB\2`\0(\3\\\300u\35\f"
 #"e\00067\257^f.9M4\34a\364\306uf\306\306Y\315dp\245E"
 #"\272\220\347\304K\337e\367\300\343(_"
 #"\0\244\17\4\325\320\200\250n<\r\302"
 #"\323\256\206\17\317\301\3\257\302\3117~"
 #"\315w\276\375-^|\341\31\2425&\252\354`\225\212D\242A\22m-\214\316"
 #"\3140\223Z\346\251\317~\231=\a\6!\24A#\21\256\aR\242\265\4\371\301"
 #"\5Z\343:\16\206Q\265cf\354\6\277\377\335/\330\273\275\227\r-q2\311"
 #"Yr\3673\344\263Y\224\4_8H}[+\377\36\31\347\365\267\336\341\363O"
 #"\277\300W\276\376\"f \b\332\0$ZH\34\rRh\t\236\250ZS\252\360"
 #"\307_\376\206#{\6\370\344\321\243|"
 #"|\327\16\374\270\204\375\212P\320$V\27$\30\365S\37\217R\37\vr`\340"
 #"1\216}\3563\374\354\307\257\361\336\271"
 #"3\200\3\256\3\302C\343\"\5H\267"
 #"\342 \4\224W\226\371\346\211\343"
 #"|\343\304\327\370\303\233\277e\343\372N\226R)\226"
 #"\323\367\361*%LC \205\207\326\232J\245\202\337"
) 500
(
 #"\347\2439\236\340\360\301Cl\353\333\312"
 #"\17\276\367\n\351\251;`\bl\327A"
 #"\240\21\330H\3457@\270\234\177\367m"
 #"\316\236\376\23?\374\321\367\351\335\361\b"
 #"JJ\234|\211\374\312*\305\\\36\247P\300\312\25(\346\362d3Y\212+\25"
 #"\360\24m\35\235\364\367\357b\370\332\24"
 #"C\227.\342\272\16B)\4 \252U\361\300\265\2713\371>\211\206({\36\337"
 #"\203\21\217\201\326H\r\2464Q\236@\270\2\211\201)|H\341c~.M\245"
 #"\354A\242\t\345\3633\270\177+\377\271r\205L&\203FS}8\2\t\36V"
 #"\251\300\302\302<\237x\342\b\315-M"
 #"\340\331x\256C\270\266\26S\231\344V"
 #"\2138\266\2406\32\307P!\202\201:\352\e[\251\t\327\2014\350\352\351aC"
 #"W\27\343\343\343\334z\377&\6\22\253R\1-\220\0\276@\2205\215M\270E"
 #"\233\364\302\"8.\3220\261Jef\347S\24,\207\344\\\206\321[\323\\\277"
 #"u\207\277\236\273\300_N\236\342\336\334"
 #"<x\232\356\236\315,gs\\\2720\204O\b\4\32\237\317\17Zc\270\216\203"
 #"B\361\330\266~\236\177\355'<\373\334"
 #"q\254\205%\316\237\37237\256\16\261"
 #"\2604\307\316\276\35t\264\266\363\217\363"
 #"\227\30\32\35\306\301#j\206p|>"
 #"^\336\271\213\372\306F\244\241\260mP"
 #"\266\5\266\5\312\17B!\225\241\0A[\274\5\277P\4\244bb\344:\27\316"
 #"\274\303r&\305\331s\327\t\307\e\331"
 #"}\360\20\365k\326\220+\344)\346s"
 #"\364\357\332\216O\302\304\265k\250p\230"
 #"x<N[k\224\277\235:\211\263\224"
 #"\1\333\256*\360p\221\322\305\266\212\264"
 #"5\305\321\245\34\246[\346\360\376~F"
 #"F\206\211\372\241\263c\35y\327\342\300\340ab\365\1\206/\17\241\363+"
 #"|l\355Z\264]\206r\211\355[\372X\234\236!\237J\221N\316\320\34k"
) 500
(
 #"\0\1\206\203\207\17\210\324F)\224\362\254f\227hmk\"s\3576]]]"
 #"\274\365\3463\264l\352\301*\33045"
 #"5\321\275\276\23\263RB\270\36k\333"
 #"\333\361\e\n\264\346\300\300>\376\373\336"
 #"%*\305\2\206\266\301\220 \4RQ\3Z\222u*|\351\370sx\1\205m"
 #"@\274\275\235\201#\203\24+\200cR)X\230\30(i\362\366\2313\244Wr"
 #"\314\334[ \221H\200!\b4\304yt\363f\354R\1%=\0\234r\5C"
 #"#@\31\330\206I$\21\2471\321L4Z\203\256k\340\354\331\277S\327\330J"
 #"8\332\300\335\211Yfg&q\355\25\332:\326r\356\342E\326-fh\355\355"
 #"e[S3\263c\23D\23-|\341\331\347\251\353\334\0\36\0305~\214\a\375"
 #"\225\206\3466\2727m\241\222-0:1Njf\232\333\243\243|\365\304An"
 #"\216\215\362\322\313\257`\331.\307\216\35"
 #"b\367\300\0\205\242M(\22\341\356\355;\364\355\256@$F\327\276CUE\301"
 #"\20x\0\22akG+<\204\v,\247X\232\231d\370_\347Y\270{\213D"
 #"\"\201/\24\341\336\3022VI\200\360"
 #"\210\306\24\247O\237\304*U\350\337\267"
 #"\237\332\246f\236\372\342\323D\332\272\300"
 #"\37Dk\215\326\32\317\3\30300\24\252\252A9P_O}\270\217Xr\226"
 #"L\352\36#\243#\344-\311\340\23\237"
 #"\246\326\37\344\366\370\30\263s\323l\351"
 #"\351e%_ \321\322\n\206A6\233%\342y\17\211\"\245D\312\217\20\255\n"
 #"\"\211\355:\370\374!\0343\214\255|\254\337\324Kw\3576L\24?}\365U"
 #"\306o\2160\370\251'iiocc\242\t_\240\206\262\343!\204\300\262,|"
 #"5\232\377\17C<Hn\271\32\303\f\241\201\366\215=\270\371\fT"
 #"V)[%\362\3052\275\217l$\26\16`\3336\3220\331\266s"
) 341
(
 #"'eOS,\26\211F\243\370B!\20\342!\31]\327E)UU \250\2"
 #"G\3\256\vk\326\255gM<\306\360?\337\245>\26\"\227N\321\275\271\a\333"
 #"r\261\205\246{\313\26\"\261F\2B\23\216\332\17H\353=X<\244\224(\245"
 #"\320ZW\273\251\3538H@;\325\377\201\v\4\"lzt'\205B\16\2414"
 #"\227\257]chd\204\331\314\22\251\325"
 #"\25\322\331,\313\271\"\311d\222B\241@j~\36t\325\367\17\n-\204@z"
 #"\236\207a\30x\16\230\262\312|\204\0aR\266]JV\205\211\333\223\330B0"
 #"\277\274\304\305+W\31\31\237\244\255\243"
 #"\223\321\261q\346\346\347\361\204`r\342"
 #"\16\236\353\"\245D\210\17G\b)\245\201\326\32\245>2Z\bErj\222\251"
 #"\344,\266\3\351\245U\216<y\0243"
 #"\24\342V\262\310\317\177\365:\205\212E\264.F&\263L0\30$\235N\223\313"
 #"\345p\34\247\232B\210\252\n\255\265~8\317\0X\200tY\\\234F\227W\210"
 #"\212\n\305\325\f\221\272F\246\222s,.\346p\20\354\335\273\227|~\205lj"
 #"\221u[\373\230\274{\237x{\a\376\200\217\232\232\32\34\247\352\314"
 #"\377\0\313\3535\344\25\1\26}\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"CUP-PIC"
0 0 23 3 1 #" "
0 2          15 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\17\0\0\0\17\b"
 #"\6\0\0\0;\326\225J\0\0\2\261IDAT(\221%\316Ko\224U\34"
 #"\300\341\3379\347\275\315\2753\3662\5ki\300\230&\340\2\213$T\223\22$"
 #"MPW.\210\356t%\37\200\255&~\e\27\304\27071\221(\30\25A4"
 #"%u\246uh\2473\224v:\235\333;\357\345\274\177\27<\237\340Q\"\211\200"
 #"FR\2152\220I\212\322\200\30\254RX^\321\222\341* \265`\24\242@\211"
 #"XIl\2066\16\221\0\nR\240w\0321\30\305\210\347S\251z\224\35p\1"
 #"\37\310\342\b\337sQV2IQ\f2\350\16CZ\207\2474\367\17\351\365#"
 #"\374|\225\343\301\24\353\n\313\27f9"
 #"\177\246\302Z-O\25\b\4\234\24\305\24\330iw\230\230<Nq\36\267\354\223"
 #"s\25\371\322\fGQ\a\345\303a\342\362\367\203\307\354.T\371dm\225b\2"
 #"j,\"/\6\23Be8\215\f\317\17FDR\300\270.\215f\237\331j@"
 #"\26(\232\275\3\234\212\317(\354\263R"
 #"\366\371\342\362y\364p\2320\34\217\310"
 #"\225|\22\233\261\177\320\245\20\270\330\b"
 #"N^\276\0I\251\226}\264v\310\264"
 #"\213-\227\371\255\261Mw\224\240\367["
 #"\r\216^v\210S\20\317\341\354\e\313"
 #"`\300J\312\265\367\336\"v\25}\v\265\327\27\b*\1Q\330\247\337m\243F"
 #"\23\264\e\207<}\370\vv\320c\276\244\251\325r<\331zJ\230\r\360k\20"
 #"\352\230\277\232\317\20\235\22\17\2178\331"
 #"\372\235\342\270K\321d\350\267/\274I"
 #"\332n\363\350\273o\211[M\262\344\210\225\325\263T\226fh\366\6H\33603"
 #"W\241\265\263\315\336\243\237Y\352"
 #"\377\313\207\347J\234\233\253\340`<676\370\346"
 #"\353\257\330\333m\261\270v\25\267\276\300I7\303Z"
) 246
(
 #"AB0\341\4\247wH\376\370?\206\333O\270\371\321]\220\4\a\355q\361\312"
 #":\256\311\363\343\275{\254n\375\311\342"
 #"\362<\221J\3005\270N@I;\244\247}\332\215]\362A\225\372\322%\304f"
 #"8h\5\271\34\227\336\271\314\17\337\357"
 #"\260\367\354\37\32\217\357\343\25\2\274\300"
 #"\305(\2078\216\31L&t\372!\267>\375\222\240P\3R4\32 \343\335\215"
 #"\367\231\370>\314/\341\234Y\305\231\275"
 #"\310\324[\341\330\276F/\236\301R\307"
 #"x\v\334\334\274\205\210\205$E\247q"
 #"\2ZX\377\340\6\37\337\276\315\363\336"
 #"\200\261\370D\252\200\16\346p\2029\334"
 #"R\235\343\251\346\263\317\357\260qc\23\224\1cP\222YA\1hD\204?~"
 #"}\310\203\373?\321i\355\21\217C\202"
 #"B\221\331\372\"\327\256_\347\312\372U\262WQ\20\313\377&"
 #"!= \250$\26\334\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"WAY-PIC"
0 0 23 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; A Cupcake is a Posn"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; A Waypoint is a Posn"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 8 #"velocity"
0 0 23 3 2 #" ("
0 0 14 3 5 #"angle"
0 0 23 3 1 #" "
0 0 14 3 9 #"magnitude"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; A Velocity is a (make-velocity Number Number)"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";; Parameters:"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";;   1. an angle (in radians) "
0 0 23 29 1 #"\n"
0 0 17 3 32 #";;   2. a non-negative magnitude"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 6 #"player"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 3 #"pos"
0 0 23 3 1 #" "
0 0 14 3 8 #"velocity"
0 0 23 3 1 #" "
0 0 14 3 9 #"waypoints"
0 0 23 3 1 #" "
0 0 14 3 3 #"pic"
0 0 23 3 1 #" "
0 0 14 3 5 #"score"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; A Player is (make-player String Posn Velocity [Listof Waypoint] I"
 #"mage Number)"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 19 3 2 #"\"\""
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #") "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 14 3 9 #"HUMAN-PIC"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"p2-jump"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 19 3 2 #"\"\""
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 2 #") "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"p3-no-move"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 19 3 2 #"\"\""
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 20 3 1 #"`"
0 0 23 3 2 #"()"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"p4-no-way"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                    "
0 0 19 3 2 #"\"\""
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                    "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"21"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                    "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #" ("
0 0 14 3 3 #"loc"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; A World is a (make-room [Listof Cupcake] [Listof Player])"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";;    where the first player in the list is the user"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-room"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"130"
0 0 23 3 1 #" "
0 0 20 3 3 #"156"
0 0 23 3 2 #") "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"234"
0 0 23 3 1 #" "
0 0 20 3 2 #"76"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 19 3 9 #"\"example\""
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"`"
0 0 23 3 2 #"()"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 14 3 9 #"HUMAN-PIC"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"0"
0 0 23 3 35 #")                                  "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 19 3 8 #"\"walker\""
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"90"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 6 #"circle"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"0"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; Main Function"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; play: Number Number String -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";; Parameters:"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;   1. Number cupcakes"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";;   2. Number random-walk players"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;   3. Name of human player"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; gives back the user from the final world"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"play"
0 0 23 3 1 #" "
0 0 14 3 4 #"n-cc"
0 0 23 3 1 #" "
0 0 14 3 4 #"n-rw"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"play"
0 0 23 3 1 #" "
0 0 14 3 4 #"n-cc"
0 0 23 3 1 #" "
0 0 14 3 4 #"n-rw"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"get-user"
0 0 23 3 2 #" ("
0 0 14 3 8 #"big-bang"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-room"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 14 3 4 #"n-cc"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                 ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 14 3 4 #"name"
0 0 23 29 1 #"\n"
0 0 23 3 41 #"                                        ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 1 #" "
0 0 14 3 13 #"SCENE-PADDING"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 41 #"                                        ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 20 3 1 #"`"
0 0 23 3 2 #"()"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 14 3 9 #"HUMAN-PIC"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 12 #"make-walkers"
0 0 23 3 1 #" "
0 0 14 3 4 #"n-rw"
0 0 23 3 24 #")))                     "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"tick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 9 #"stop-when"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 4 #"room"
0 0 23 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 14 3 10 #"last-scene"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 8 #"on-mouse"
0 0 23 3 1 #" "
0 0 14 3 12 #"add-waypoint"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 4 #"draw"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";; Big Bang Functions"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; add-waypoint: World Number Number MouseEvent -> World"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; adds a waypoint to the Player's list "
0 0 23 29 1 #"\n"
0 0 17 3 49 #";;    of Waypoints based on the given coordinates"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"add-waypoint"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"add-waypoint"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 16 #")               "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 13 #")            "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 14 #"queue-waypoint"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 11 #"get-walkers"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 7 #")))]   "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 12 #"add-waypoint"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 1 #" "
0 0 20 3 3 #"193"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 1 #" "
0 0 20 3 3 #"193"
0 0 23 3 5 #")))  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 12 #"add-waypoint"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 1 #" "
0 0 20 3 3 #"193"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"nothing    \""
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 1 #"`"
0 0 23 3 5 #"())  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; tick: World -> World"
0 0 23 29 1 #"\n"
0 0 17 3 68
#";; moves each player, has each player consume appropriate cupcakes, "
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;   increments the time"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"eat-cupcakes"
0 0 23 3 2 #" ("
0 0 14 3 13 #"update-scores"
0 0 23 3 2 #" ("
0 0 14 3 16 #"move-all-players"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"130"
0 0 23 3 1 #" "
0 0 20 3 3 #"156"
0 0 23 3 2 #") "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"234"
0 0 23 3 1 #" "
0 0 20 3 2 #"76"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"example\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                               "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 2          19 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\32\b"
 #"\6\0\0\0\255\277\234\363\0\0\6\370IDATH\211]\226Yl\234W\25"
 #"\307\177\367\336\357\233\361\254\36/3v"
 #"\274\20\307\211\2358n\342f!q\232\270YQ\35\n\25\2D\4\210n\244\""
 #"\242,\355\3\22Ry\202\27T\251 !\201\4\2\204\324\202Z\20\2\322\204\246"
 #"\201\240\204\244\302J\28\211S\333\261"
 #"\223x\231x\231\314x\231}\276\355\3620iZq^\256\256\256t\256\376\377s"
 #"\357\371\35\241\35\255]\0170A\3\322"
 #"\363\220\2\320\26\340\201P\340y\344\246\223\314LM\20\212\5Yu,:6m"
 #"'\34\255G\341\2\2\a\3]M\3\256\aB\2`\0(\3\\\300u\35\f"
 #"e\00067\257^f.9M4\34a\364\306uf\306\306Y\315dp\245E"
 #"\272\220\347\304K\337e\367\300\343(_"
 #"\0\244\17\4\325\320\200\250n<\r\302"
 #"\323\256\206\17\317\301\3\257\302\3117~"
 #"\315w\276\375-^|\341\31\2425&\252\354`\225\212D\242A\22m-\214\316"
 #"\3140\223Z\346\251\317~\231=\a\6!\24A#\21\256\aR\242\265\4\371\301"
 #"\5Z\343:\16\206Q\265cf\354\6\277\377\335/\330\273\275\227\r-q2\311"
 #"Yr\3673\344\263Y\224\4_8H}[+\377\36\31\347\365\267\336\341\363O"
 #"\277\300W\276\376\"f \b\332\0$ZH\34\rRh\t\236\250ZS\252\360"
 #"\307_\376\206#{\6\370\344\321\243|"
 #"|\327\16\374\270\204\375\212P\320$V\27$\30\365S\37\217R\37\vr`\340"
 #"1\216}\3563\374\354\307\257\361\336\271"
 #"3\200\3\256\3\302C\343\"\5H\267"
 #"\342 \4\224W\226\371\346\211\343"
 #"|\343\304\327\370\303\233\277e\343\372N\226R)\226"
 #"\323\367\361*%LC \205\207\326\232J\245\202\337"
) 500
(
 #"\347\2439\236\340\360\301Cl\353\333\312"
 #"\17\276\367\n\351\251;`\bl\327A"
 #"\240\21\330H\3457@\270\234\177\367m"
 #"\316\236\376\23?\374\321\367\351\335\361\b"
 #"JJ\234|\211\374\312*\305\\\36\247P\300\312\25(\346\362d3Y\212+\25"
 #"\360\24m\35\235\364\367\357b\370\332\24"
 #"C\227.\342\272\16B)\4 \252U\361\300\265\2713\371>\211\206({\36\337"
 #"\203\21\217\201\326H\r\2464Q\236@\270\2\211\201)|H\341c~.M\245"
 #"\354A\242\t\345\3633\270\177+\377\271r\205L&\203FS}8\2\t\36V"
 #"\251\300\302\302<\237x\342\b\315-M"
 #"\340\331x\256C\270\266\26S\231\344V"
 #"\2138\266\2406\32\307P!\202\201:\352\e[\251\t\327\2014\350\352\351aC"
 #"W\27\343\343\343\334z\377&\6\22\253R\1-\220\0\276@\2205\215M\270E"
 #"\233\364\302\"8.\3220\261Jef\347S\24,\207\344\\\206\321[\323\\\277"
 #"u\207\277\236\273\300_N\236\342\336\334"
 #"<x\232\356\236\315,gs\\\2720\204O\b\4\32\237\317\17Zc\270\216\203"
 #"B\361\330\266~\236\177\355'<\373\334"
 #"q\254\205%\316\237\37237\256\16\261"
 #"\2604\307\316\276\35t\264\266\363\217\363"
 #"\227\30\32\35\306\301#j\206p|>"
 #"^\336\271\213\372\306F\244\241\260mP"
 #"\266\5\266\5\312\17B!\225\241\0A[\274\5\277P\4\244bb\344:\27\316"
 #"\274\303r&\305\331s\327\t\307\e\331"
 #"}\360\20\365k\326\220+\344)\346s"
 #"\364\357\332\216O\302\304\265k\250p\230"
 #"x<N[k\224\277\235:\211\263\224"
 #"\1\333\256*\360p\221\322\305\266\212\264"
 #"5\305\321\245\34\246[\346\360\376~F"
 #"F\206\211\372\241\263c\35y\327\342\300\340ab\365\1\206/\17\241\363+"
 #"|l\355Z\264]\206r\211\355[\372X\234\236!\237J\221N\316\320\34k"
) 500
(
 #"\0\1\206\203\207\17\210\324F)\224\362\254f\227hmk\"s\3576]]]"
 #"\274\365\3463\264l\352\301*\33045"
 #"5\321\275\276\23\263RB\270\36k\333"
 #"\333\361\e\n\264\346\300\300>\376\373\336"
 #"%*\305\2\206\266\301\220 \4RQ\3Z\222u*|\351\370sx\1\205m"
 #"@\274\275\235\201#\203\24+\200cR)X\230\30(i\362\366\2313\244Wr"
 #"\314\334[ \221H\200!\b4\304yt\363f\354R\1%=\0\234r\5C"
 #"#@\31\330\206I$\21\2471\321L4Z\203\256k\340\354\331\277S\327\330J"
 #"8\332\300\335\211Yfg&q\355\25\332:\326r\356\342E\326-fh\355\355"
 #"e[S3\263c\23D\23-|\341\331\347\251\353\334\0\36\0305~\214\a\375"
 #"\225\206\3466\2727m\241\222-0:1Njf\232\333\243\243|\365\304An"
 #"\216\215\362\322\313\257`\331.\307\216\35"
 #"b\367\300\0\205\242M(\22\341\356\355;\364\355\256@$F\327\276CUE\301"
 #"\20x\0\22akG+<\204\v,\247X\232\231d\370_\347Y\270{\213D"
 #"\"\201/\24\341\336\3022VI\200\360"
 #"\210\306\24\247O\237\304*U\350\337\267"
 #"\237\332\246f\236\372\342\323D\332\272\300"
 #"\37Dk\215\326\32\317\3\30300\24\252\252A9P_O}\270\217Xr\226"
 #"L\352\36#\243#\344-\311\340\23\237"
 #"\246\326\37\344\366\370\30\263s\323l\351"
 #"\351e%_ \321\322\n\206A6\233%\342y\17\211\"\245D\312\217\20\255\n"
 #"\"\211\355:\370\374!\0343\214\255|\254\337\324Kw\3576L\24?}\365U"
 #"\306o\2160\370\251'iiocc\242\t_\240\206\262\343!\204\300\262,|"
 #"5\232\377\17C<Hn\271\32\303\f\241\201\366\215=\270\371\fT"
 #"V)[%\362\3052\275\217l$\26\16`\3336\3220\331\266s"
) 341
(
 #"'eOS,\26\211F\243\370B!\20\342!\31]\327E)UU \250\2"
 #"G\3\256\vk\326\255gM<\306\360?\337\245>\26\"\227N\321\275\271\a\333"
 #"r\261\205\246{\313\26\"\261F\2B\23\216\332\17H\353=X<\244\224(\245"
 #"\320ZW\273\251\3538H@;\325\377\201\v\4\"lzt'\205B\16\2414"
 #"\227\257]chd\204\331\314\22\251\325"
 #"\25\322\331,\313\271\"\311d\222B\241@j~\36t\325\367\17\n-\204@z"
 #"\236\207a\30x\16\230\262\312|\204\0aR\266]JV\205\211\333\223\330B0"
 #"\277\274\304\305+W\31\31\237\244\255\243"
 #"\223\321\261q\346\346\347\361\204`r\342"
 #"\16\236\353\"\245D\210\17G\b)\245\201\326\32\245>2Z\bErj\222\251"
 #"\344,\266\3\351\245U\216<y\0243"
 #"\24\342V\262\310\317\177\365:\205\212E\264.F&\263L0\30$\235N\223\313"
 #"\345p\34\247\232B\210\252\n\255\265~8\317\0X\200tY\\\234F\227W\210"
 #"\212\n\305\325\f\221\272F\246\222s,.\346p\20\354\335\273\227|~\205lj"
 #"\221u[\373\230\274{\237x{\a\376\200\217\232\232\32\34\247\352\314"
 #"\377\0\313\3535\344\25\1\26}\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"walker\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"90"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 3 #")) "
0 12           4 4 86
(
 #"(#(struct:translate 7 7 #(struct:ellipse 14 14 0 255 \"red\")) #(str"
 #"uct:bb 14 14 14) #f)"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; draw: World -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; draws the players, user's waypoints, and the cupcakes"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 15 #"overlay-players"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 12 #"overlay-posn"
0 0 23 3 1 #" "
0 0 14 3 7 #"WAY-PIC"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                 ("
0 0 14 3 12 #"overlay-posn"
0 0 23 3 1 #" "
0 0 14 3 7 #"CUP-PIC"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 5 #"SCENE"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 12           4 4 16905
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 63 63 #(struct:translate 7 7 #(struct:el"
 #"lipse 14 14 0 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(s"
 #"truct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 8 7 #(struct:translate 12 13 #(struct:bitmap #(#\"\\377\\"
 #"377\\374\\377\\377\\374\\372\\377\\377\\374\\377\\377\\377\\373\\377"
 #"\\377\\377\\375\\375\\375\\377\\377\\376\\375\\377\\377\\375\\367\\3"
 #"77\\377\\375\\365\\377\\377\\376\\"
 #"370\\377\\377\\374\\366\\377\\362\\335\\332\\377\\324\\275\\265\\377"
 #"\\337\\315\\277\\377\\320\\311\\271\\377\\360\\361\\353\\377\\374\\3"
 #"77\\375\\377\\377\\377\\372\\377\\"
 #"377\\377\\373\\377\\373\\377\\377\\377\\372\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\374\\375\\377\\377\\375\\377\\377\\377\\375\\377\\3"
 #"77\\377\\374\\377\\377\\377\\376\\"
 #"377\\377\\374\\377\\377\\377\\370\\374\\373\\377\\377\\377\\377\\377"
 #"\\377\\377\\372\\377\\324\\312\\301\\377\\272\\256\\242\\377\\310\\2"
 #"72\\257\\377\\237\\215\\201\\377\\201eZ\\377rRG\\377oTA\\377[I5\\377"
 #"\\303\\271\\255\\377\\372\\366\\353\\377\\377\\374\\364\\377\\377\\3"
 #"76\\372\\377\\373\\377\\377\\377\\"
 #"372\\377\\377\\377\\377\\376\\377\\377\\377\\375\\376\\377\\377\\375"
 #"\\377\\377\\375\\374\\377\\377\\376\\377\\375\\377\\376\\377\\375\\3"
 #"77\\377\\377\\375\\377\\377\\377\\"
 #"375\\377\\377\\377\\373\\377\\377\\375\\364\\377\\261\\241\\222\\377"
 #"&\\20\\0\\377\\221u_\\377\\237}d\\377\\242u`\\377\\234lV\\377\\251z`"
 #"\\377\\277\\226z\\377\\226x\\\\\\377xbK\\377\\306\\264\\246\\377\\37"
 #"7\\364\\356\\377\\377\\377\\373\\377\\376\\377\\375\\377\\377\\374\\"
 #"373\\377\\377\\376\\375\\377\\376\\375\\377\\377\\376\\377\\377\\377"
 #"\\376\\377\\375\\377\\376\\376\\374\\377\\373\\372\\370\\377\\377\\3"
 #"76\\373\\377\\377\\374\\371\\377\\341\\324\\314\\377\\213zf\\377\\30"
 #"6\\254\\221\\377\\352\\306\\246\\3"
 #"77\\327\\252\\211\\377\\312\\225v\\377\\276\\207h\\377\\301\\211h\\3"
 #"77\\307\\225r\\377\\331\\261\\215\\377\\246\\205f\\377I.\\35\\377\\2"
 #"35\\214\\202\\377\\372\\366\\355\\"
 #"377\\377\\377\\367\\377\\377\\376\\373\\377\\377\\376\\375\\377\\376"
 #"\\377\\377\\377\\372\\376\\377\\377\\377\\376\\377\\377\\376\\374\\3"
 #"75\\377\\377\\375\\374\\377\\377\\365\\364\\377\\254\\230\\231\\377%"
 #"\\r\\t\\377\\325\\303\\257\\377\\373\\342\\304\\377\\361\\306\\243\\"
 #"377\\343\\261\\214\\377\\325\\237{\\377\\316\\230r\\377\\313\\227o\\"
 #"377\\331\\252\\200\\377\\353\\301\\227\\377\\346\\302\\240\\377\\240"
 #"\\201m\\3773\\e\\17\\377\\277\\263\\245\\377\\377\\377\\363\\377\\37"
 #"7\\373\\367\\377\\377\\377\\373\\377\\375\\377\\374\\377\\374\\377\\"
 #"377\\377\\374\\367\\373\\377\\377\\375\\375\\377\\367\\355\\353\\377"
 #"l]X\\377\\30\\0\\0\\377\\320\\265\\256\\377\\374\\346\\321\\377\\351"
 #"\\314\\256\\377\\340\\262\\216\\377\\341\\252\\203\\377\\332\\243|\\"
 #"377\\320\\231p\\377\\312\\226n\\377\\322\\243y\\377\\362\\307\\235\\"
 #"377\\376\\327\\266\\377\\343\\302\\257\\377dJ=\\377B/ \\377\\353\\33"
 #"7\\321\\377\\377\\377\\370\\377\\372\\374\\367\\377\\376\\377\\373\\"
 #"377\\375\\377\\372\\377\\377\\376\\377\\377\\377\\376\\372\\377\\267"
 #"\\246\\236\\377&\\22\\a\\377\\240\\216\\202\\377\\373\\350\\332\\377"
 #"\\377\\350\\323\\377\\345\\300\\245\\377\\324\\242\\177\\377\\327\\2"
 #"35w\\377\\326\\230q\\377\\312\\214"
 #"e\\377\\300\\211b\\377\\304\\220k\\377\\350\\267\\226\\377\\376\\325"
 #"\\271\\377\\377\\342\\321\\377\\234\\202s\\377\\22\\0\\0\\377\\263\\"
 #"243\\224\\377\\374\\374\\364\\377\\373\\377\\372\\377\\377\\377\\373"
 #"\\377\\376\\377\\371\\377\\377\\377\\375\\377\\377\\373\\365\\377\\2"
 #"25\\202t\\377<%\\25\\377\\331\\314\\273\\377\\377\\375\\352\\377\\37"
 #"7\\347\\322\\377\\347\\277\\245\\3"
 #"77\\331\\244\\204\\377\\332\\233x\\377\\327\\225r\\377\\314\\214i\\3"
 #"77\\305\\212h\\377\\306\\221q\\377\\317\\235\\202\\377\\367\\315\\26"
 #"7\\377\\377\\370\\350\\377\\237\\21"
 #"0z\\377Z?.\\377\\201n_\\377\\351\\"
 #"351\\341\\377\\372\\377\\371\\377\\377\\377\\373\\377\\377\\377\\372"
 #"\\377\\377\\377\\373\\377\\371\\362\\352\\377}j[\\377\\201lY\\377\\3"
 #"61\\346\\322\\377\\377\\373\\345\\"
 #"377\\375\\344\\316\\377\\363\\316\\264\\377\\336\\247\\211\\377\\315"
 #"\\214n\\377\\323\\220s\\377\\333\\232~\\377\\311\\215s\\377\\320\\23"
 #"2\\202\\377\\341\\261\\235\\377\\377\\331\\310\\377\\377\\372\\354\\"
 #"377\\304\\261\\243\\377~dS\\377ZG8\\377\\303\\277\\266\\377\\376\\37"
 #"7\\373\\377\\371\\370\\364\\377\\377\\376\\373\\377\\377\\377\\373\\"
 #"377\\377\\373\\364\\377\\226~r\\377~bT\\377\\335\\316\\273\\377\\377"
 #"\\367\\342\\377\\377\\350\\323\\377\\355\\305\\254\\377\\301\\216s\\"
 #"377\\302\\206j\\377\\267v`\\377\\2"
 #"62t_\\377\\233gQ\\377\\206WC\\377\\222cQ\\377\\344\\277\\257\\377\\3"
 #"77\\370\\353\\377\\352\\332\\315\\377mVF\\377\\36\\b\\0\\377\\311\\3"
 #"00\\267\\377\\377\\377\\372\\377\\"
 #"377\\376\\373\\377\\377\\375\\372\\377\\374\\373\\367\\377\\377\\373"
 #"\\367\\377\\320\\257\\252\\3772\\v"
 #"\\4\\377\\336\\303\\270\\377\\371\\337\\320\\377\\271\\223\\200\\377"
 #"\\214_H\\377tM.\\377\\250|a\\377\\310\\221}\\377\\206QA\\377N(\\21\\"
 #"377J(\\17\\377X-\\32\\377\\216iW\\"
 #"377\\377\\363\\345\\377\\374\\356\\341\\377oZI\\377\\31\\3\\0\\377\\"
 #"314\\273\\261\\377\\377\\372\\364\\377\\377\\375\\373\\377\\377\\376"
 #"\\375\\377\\377\\377\\372\\377\\377\\373\\370\\377\\354\\304\\304\\3"
 #"779\\f\\a\\377\\347\\305\\273\\377\\324\\263\\242\\377zK7\\377{L2\\3"
 #"77.\\n\\0\\377\\264\\221u\\377\\37"
 #"7\\322\\277\\377\\230jZ\\377A\\35\\5\\377@\\34\\2\\377\\220cL\\377\\"
 #"224kW\\377\\332\\304\\266\\377\\37"
 #"7\\372\\355\\377\\204o^\\3775\\36\\16\\377\\207oc\\377\\373\\350\\34"
 #"1\\377\\377\\370\\366\\377\\377\\375\\374\\377\\375\\377\\367\\377\\"
 #"377\\375\\364\\377\\347\\276\\272\\377U#\\34\\377\\346\\274\\256\\37"
 #"7\\331\\260\\232\\377\\275\\212o\\"
 #"377\\221^?\\377<\\21\\0\\377\\326\\261\\226\\377\\363\\317\\271\\377"
 #"\\330\\262\\235\\377\\250|c\\377xF+\\377\\217W<\\377\\262\\202k\\377"
 #"\\331\\277\\256\\377\\377\\362\\344\\377\\266\\234\\215\\377mP@\\377"
 #"{YM\\377\\347\\314\\303\\377\\377\\370\\364\\377\\377\\376\\374\\377"
 #"\\371\\377\\365\\377\\377\\375\\364\\377\\364\\315\\310\\377J\\32\\2"
 #"0\\377\\327\\256\\234\\377\\362\\3"
 #"12\\261\\377\\306\\225w\\377\\266\\203d\\377\\345\\271\\236\\377\\37"
 #"7\\341\\307\\377\\371\\326\\302\\377\\357\\311\\264\\377\\316\\237\\"
 #"205\\377\\255uZ\\377\\256rX\\377\\"
 #"321\\237\\210\\377\\340\\303\\261\\377\\377\\361\\343\\377\\366\\331"
 #"\\311\\377\\205aQ\\377~WF\\377\\353\\313\\276\\377\\377\\374\\366\\3"
 #"77\\377\\377\\375\\377\\374\\377\\"
 #"375\\377\\377\\374\\366\\377\\346\\311\\301\\377\\244~q\\377\\325\\2"
 #"67\\237\\377\\355\\316\\261\\377\\"
 #"333\\262\\224\\377\\363\\307\\254\\377\\333\\262\\236\\377\\377\\335"
 #"\\314\\377\\362\\313\\274\\377\\364\\311\\270\\377\\321\\241\\212\\3"
 #"77`-\\22\\377\\232bK\\377\\263\\204p\\377\\366\\331\\307\\377\\377\\"
 #"365\\344\\377\\377\\354\\336\\377\\"
 #"265\\213{\\377yN;\\377\\356\\315\\"
 #"274\\377\\377\\374\\366\\377\\373\\367\\366\\377\\373\\377\\376\\377"
 #"\\377\\377\\372\\377\\341\\315\\306\\377\\261\\224\\206\\377\\351\\3"
 #"15\\267\\377\\373\\334\\277\\377\\354\\303\\247\\377\\255\\201h\\377"
 #"\\276\\225\\203\\377\\347\\300\\26"
 #"1\\377\\306\\233\\224\\377\\251}p\\377\\246x`\\377|M1\\377W%\\16\\37"
 #"7xK8\\377\\316\\257\\233\\377\\377\\360\\337\\377\\342\\304\\271\\37"
 #"7\\303\\241\\225\\377\\317\\256\\235\\377\\377\\357\\340\\377\\377\\"
 #"372\\366\\377\\377\\377\\375\\377\\373\\377\\375\\377\\377\\377\\373"
 #"\\377\\364\\345\\342\\377\\327\\274\\263\\377\\342\\277\\254\\377\\3"
 #"22\\250\\220\\377\\274\\212q\\377\\212X?\\377\\355\\300\\251\\377\\3"
 #"02\\230\\210\\3772\\t\\3\\377,\\4\\0\\377\\203[B\\377\\263\\212n\\37"
 #"7qC,\\377\\203XE\\377\\255\\214y\\"
 #"377\\375\\346\\330\\377\\342\\321\\311\\377\\350\\335\\327\\377\\376"
 #"\\363\\355\\377\\377\\375\\370\\377\\377\\373\\370\\377\\377\\377\\3"
 #"77\\377\\373\\377\\374\\377\\376\\"
 #"377\\372\\377\\377\\374\\372\\377\\377\\353\\344\\377\\355\\315\\300"
 #"\\377\\275\\224\\200\\377\\245sZ\\377\\273\\211p\\377\\301\\224}\\37"
 #"7\\246|l\\377\\240sm\\377\\240tk\\"
 #"377\\256\\204n\\377c9 \\377]0\\31\\377\\225lX\\377\\244\\203p\\377\\"
 #"362\\334\\316\\377\\377\\370\\363\\377\\377\\377\\375\\377\\376\\376"
 #"\\374\\377\\375\\375\\373\\377\\373\\373\\373\\377\\377\\377\\377\\3"
 #"77\\376\\377\\377\\377\\375\\377\\"
 #"374\\377\\377\\377\\370\\377\\377\\375\\366\\377\\377\\367\\357\\377"
 #"\\315\\261\\243\\377\\252~e\\377\\217`D\\377\\203ZF\\377\\313\\241\\"
 #"223\\377\\332\\250\\235\\377\\267\\201u\\377\\232jV\\377\\220bK\\377"
 #"\\200V@\\377\\253\\206s\\377\\253\\212w\\377\\344\\316\\300\\377\\37"
 #"7\\366\\361\\377\\377\\377\\375\\377\\376\\376\\374\\377\\377\\377\\"
 #"375\\377\\377\\377\\377\\377\\377\\377\\377\\377\\376\\377\\377\\377"
 #"\\375\\377\\374\\377\\376\\377\\372\\377\\371\\372\\364\\377\\377\\3"
 #"76\\372\\377\\311\\266\\257\\377\\245\\201k\\377\\262\\210o\\377\\33"
 #"0\\263\\240\\377\\335\\263\\243\\377r=-\\377K\\22\\1\\377\\223^L\\37"
 #"7\\252{g\\377\\267\\221~\\377\\275\\232\\206\\377\\265\\226\\204\\37"
 #"7\\345\\317\\301\\377\\371\\360\\353\\377\\377\\376\\374\\377\\376\\"
 #"376\\374\\377\\377\\377\\375\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\375\\377\\376\\377\\370\\374\\373\\377\\3"
 #"74\\377\\377\\377\\376\\377\\377\\"
 #"377\\346\\335\\330\\377\\306\\252\\234\\377\\306\\243\\215\\377\\320"
 #"\\255\\227\\377\\314\\243\\217\\377\\235iT\\377\\202I6\\377\\216YG\\"
 #"377\\254\\177l\\377\\350\\305\\262\\377\\340\\303\\261\\377\\326\\27"
 #"1\\247\\377\\363\\335\\317\\377\\377\\373\\366\\377\\377\\377\\375\\"
 #"377\\377\\377\\375\\377\\377\\377\\375\\377\\374\\374\\374\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\376\\377\\377\\377\\374\\377\\3"
 #"77\\377\\373\\377\\377\\377\\373\\"
 #"374\\377\\377\\377\\376\\373\\377\\377\\362\\350\\377\\317\\264\\241"
 #"\\377\\342\\304\\254\\377\\325\\260\\226\\377\\303\\223}\\377\\230cQ"
 #"\\377\\223dP\\377\\322\\254\\231\\"
 #"377\\365\\325\\306\\377\\361\\326\\305\\377\\354\\321\\300\\377\\363"
 #"\\335\\317\\377\\377\\371\\364\\377\\377\\377\\375\\377\\375\\375\\3"
 #"73\\377\\377\\377\\375\\377\\377\\"
 #"377\\377\\377\\376\\376\\376\\377\\377\\377\\375\\377\\373\\373\\373"
 #"\\377\\376\\377\\377\\377\\372\\373\\377\\377\\377\\376\\377\\377\\3"
 #"77\\373\\373\\377\\377\\373\\365\\"
 #"377\\367\\344\\325\\377\\327\\271\\237\\377\\326\\263\\225\\377\\215"
 #"dN\\377`7%\\377vQ>\\377\\274\\235\\211\\377\\341\\307\\270\\377\\340"
 #"\\311\\273\\377\\320\\265\\244\\377\\350\\322\\304\\377\\351\\340\\3"
 #"33\\377\\377\\376\\377\\377\\375\\"
 #"375\\373\\377\\376\\376\\374\\377\\376\\376\\376\\377\\377\\377\\377"
 #"\\377\\375\\375\\373\\377\\377\\377\\377\\377\\374\\373\\377\\377\\3"
 #"77\\375\\377\\377\\377\\374\\377\\"
 #"377\\377\\374\\374\\377\\377\\374\\372\\377\\357\\337\\322\\377\\316"
 #"\\263\\230\\377\\261\\220q\\377\\2"
 #"10eO\\377G&\\23\\3779\\34\\n\\377\\220ve\\377\\375\\347\\332\\377\\2"
 #"67\\241\\224\\377\\266\\234\\213\\"
 #"377\\346\\323\\305\\377\\305\\273\\271\\377\\375\\373\\374\\377\\377"
 #"\\377\\375\\377\\377\\377\\375\\377\\376\\376\\376\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\376\\"
 #"376\\376\\377\\377\\376\\377\\377\\377\\376\\377\\377\\377\\374\\377"
 #"\\377\\377\\375\\377\\377\\343\\334\\326\\377\\317\\303\\265\\377\\3"
 #"11\\257\\230\\377\\235~b\\377\\31"
 #"4\\260\\230\\377L1\\36\\377\\23\\0\\0\\377)\\23\\b\\377\\362\\340\\3"
 #"24\\377\\305\\262\\244\\377\\243\\211z\\377\\360\\335\\317\\377\\261"
 #"\\247\\245\\377\\360\\356\\357\\377\\373\\373\\371\\377\\377\\377\\3"
 #"75\\377\\377\\377\\377\\377\\376\\"
 #"376\\376\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\376\\377"
 #"\\377\\377\\376\\377\\377\\377\\370\\377\\377\\377\\372\\374\\377\\3"
 #"50\\343\\335\\377\\347\\333\\315\\"
 #"377\\365\\334\\306\\377\\353\\315\\263\\377\\370\\336\\307\\377\\330"
 #"\\302\\255\\377\\301\\253\\240\\377\\275\\253\\241\\377\\370\\346\\3"
 #"34\\377\\354\\332\\314\\377\\336\\"
 #"304\\265\\377\\377\\362\\344\\377\\333\\321\\317\\377\\360\\356\\357"
 #"\\377\\367\\367\\365\\377\\377\\377\\375\\377\\373\\373\\373\\377\\3"
 #"77\\377\\377\" 24 26) 0 1 1 #hash()))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 50"
 #"0 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 245/2 297/2 #(struct:translate 15/2 15/2 #(stru"
 #"ct:bitmap #(#\"\\377\\377\\377\\373\\377\\377\\377\\375\\377\\376\\3"
 #"73\\377\\377\\377\\376\\377\\377\\"
 #"375\\375\\373\\377\\376\\377\\373\\377\\376\\376\\376\\377\\373\\377"
 #"\\377\\377\\370\\377\\377\\377\\370\\377\\377\\377\\372\\376\\375\\3"
 #"77\\377\\377\\375\\377\\377\\373\\"
 #"372\\377\\377\\376\\373\\377\\376\\377\\373\\377\\377\\377\\375\\377"
 #"\\372\\374\\373\\377\\374\\377\\377\\377\\365\\376\\377\\377\\365\\3"
 #"77\\377\\377\\361\\377\\377\\377\\"
 #"337\\360\\370\\377\\321\\344\\362\\377\\320\\352\\371\\377\\337\\373"
 #"\\377\\377\\355\\377\\377\\377\\362\\377\\377\\377\\371\\377\\377\\3"
 #"77\\367\\371\\370\\377\\376\\377\\"
 #"375\\377\\375\\377\\376\\377\\371\\377\\377\\377\\353\\375\\377\\377"
 #"\\323\\360\\366\\377\\264\\332\\347\\377\\221\\276\\321\\377\\177\\2"
 #"56\\312\\377\\206\\270\\333\\377s\\252\\323\\377p\\257\\322\\377\\21"
 #"7\\323\\346\\377\\262\\355\\365\\377\\346\\377\\377\\377\\367\\377\\"
 #"377\\377\\377\\376\\377\\377\\371\\377\\377\\377\\361\\377\\377\\377"
 #"\\311\\342\\346\\377\\277\\345\\360\\377\\270\\346\\375\\377\\226\\3"
 #"14\\356\\377\\210\\303\\357\\377\\222\\320\\377\\377r\\261\\346\\377"
 #"q\\270\\346\\377y\\316\\353\\377c\\264\\305\\377\\221\\313\\326\\377"
 #"\\344\\377\\377\\377\\360\\371\\377\\377\\365\\377\\377\\377\\336\\3"
 #"61\\365\\377\\325\\362\\370\\377\\"
 #"306\\353\\373\\377\\250\\321\\357\\377\\241\\320\\372\\377\\244\\325"
 #"\\377\\377\\200\\262\\357\\377\\224\\303\\367\\377\\222\\313\\370\\3"
 #"77o\\271\\336\\377s\\310\\345\\377g\\277\\325\\377\\210\\315\\334\\3"
 #"77\\352\\377\\377\\377\\350\\367\\"
 #"372\\377\\321\\346\\351\\377\\336\\377\\377\\377\\301\\350\\371\\377"
 #"\\214\\267\\327\\377\\254\\330\\377\\377\\241\\316\\377\\377o\\235\\"
 #"330\\377\\224\\302\\363\\377\\243\\331\\377\\377q\\273\\342\\377q\\3"
 #"12\\352\\377d\\315\\343\\377S\\251\\266\\377\\322\\363\\372\\377\\31"
 #"4\\330\\326\\377\\275\\321\\320\\377\\330\\373\\377\\377\\300\\356\\"
 #"375\\377\\247\\325\\366\\377\\254\\333\\377\\377\\236\\315\\373\\377"
 #"\\251\\331\\377\\377\\216\\307\\364\\377\\223\\326\\377\\377\\203\\3"
 #"27\\371\\377y\\331\\362\\377]\\304\\323\\377C\\221\\233\\377\\323\\3"
 #"47\\360\\377\\321\\322\\315\\377\\"
 #"220\\231\\226\\377\\325\\355\\355\\377\\326\\373\\377\\377\\271\\347"
 #"\\377\\377}\\262\\322\\377\\225\\313\\355\\377\\260\\353\\377\\377\\"
 #"205\\311\\356\\377e\\263\\327\\377\\202\\331\\365\\377s\\314\\336\\3"
 #"77L\\233\\237\\377O\\206\\203\\377\\337\\352\\356\\377\\377\\366\\36"
 #"2\\377\\214~{\\377\\243\\234\\226\\377\\320\\334\\334\\377\\267\\342"
 #"\\353\\377\\236\\333\\355\\377\\244\\350\\375\\377\\215\\331\\361\\3"
 #"77\\204\\323\\361\\377u\\310\\346\\377c\\267\\317\\377V\\232\\243\\3"
 #"77i\\213z\\377\\232\\246\\220\\377\\377\\377\\375\\377\\377\\371\\37"
 #"0\\377\\323\\276\\273\\377U=9\\377\\206{w\\377\\237\\257\\256\\377\\"
 #"243\\307\\305\\377\\223\\303\\303\\377\\212\\300\\302\\377\\203\\267"
 #"\\302\\377x\\256\\270\\377g\\234\\242\\377`\\207\\202\\377\\\\aK\\37"
 #"7\\337\\327\\300\\377\\377\\376\\370\\377\\377\\373\\376\\377\\377\\"
 #"363\\366\\377Z@C\\377E($\\377nRF\\377\\207q\\\\\\377\\200rW\\377\\20"
 #"0wZ\\377\\205{b\\377\\205}f\\377tnV\\377LJ5\\377VRF\\377\\367\\364\\"
 #"355\\377\\376\\373\\366\\377\\377\\375\\377\\377\\377\\374\\377\\377"
 #"\\207su\\377C$!\\377Q*\\e\\377J\\"
 #"\"\\t\\377P-\\21\\377V5\\26\\377Y6\\32\\377S0\\24\\377E&\\n\\377,\\2"
 #"6\\1\\377voi\\377\\377\\377\\377\\"
 #"377\\377\\377\\373\\377\\377\\377\\377\\377\\377\\374\\375\\377\\275"
 #"\\263\\262\\3779+(\\377Q@8\\377N<2\\377TA=\\377N;7\\377F3-\\377A*$\\"
 #"377B&\\\"\\377/\\34\\30\\377\\273\\266\\263\\377\\376\\376\\374\\377"
 #"\\377\\372\\367\\377\\373\\371\\372\\377\\377\\376\\374\\377\\370\\3"
 #"67\\365\\377\\206\\202\\177\\3773.*"
 #"\\377C;9\\377MBH\\377PCL\\377J;B\\"
 #"377F7<\\377/\\36$\\377\\211}\\201\\377\\373\\371\\372\\377\\376\\377"
 #"\\377\\377\\377\\375\\372\\377\\377\\376\\375\\377\\377\\377\\375\\3"
 #"77\\377\\377\\377\\377\\376\\376\\"
 #"376\\377\\313\\307\\306\\377\\222\\"
 #"212\\210\\377ykk\\377s`b\\377{kn"
 #"\\377\\217\\203\\207\\377\\311\\304\\310\\377\\376\\377\\377\\377\\3"
 #"74\\377\\377\\377\\374\\375\\377\\377\\374\\374\\374\" 15 15) 0 1 1 "
 #"#hash()))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 453/2 1"
 #"37/2 #(struct:translate 15/2 15/2 #(struct:bitmap #(#\"\\377\\377\\3"
 #"77\\373\\377\\377\\377\\375\\377\\"
 #"376\\373\\377\\377\\377\\376\\377\\377\\375\\375\\373\\377\\376\\377"
 #"\\373\\377\\376\\376\\376\\377\\373\\377\\377\\377\\370\\377\\377\\3"
 #"77\\370\\377\\377\\377\\372\\376\\"
 #"375\\377\\377\\377\\375\\377\\377\\373\\372\\377\\377\\376\\373\\377"
 #"\\376\\377\\373\\377\\377\\377\\375\\377\\372\\374\\373\\377\\374\\3"
 #"77\\377\\377\\365\\376\\377\\377\\"
 #"365\\377\\377\\377\\361\\377\\377\\377\\337\\360\\370\\377\\321\\344"
 #"\\362\\377\\320\\352\\371\\377\\337\\373\\377\\377\\355\\377\\377\\3"
 #"77\\362\\377\\377\\377\\371\\377\\"
 #"377\\377\\367\\371\\370\\377\\376\\377\\375\\377\\375\\377\\376\\377"
 #"\\371\\377\\377\\377\\353\\375\\377\\377\\323\\360\\366\\377\\264\\3"
 #"32\\347\\377\\221\\276\\321\\377\\"
 #"177\\256\\312\\377\\206\\270\\333\\377s\\252\\323\\377p\\257\\322\\3"
 #"77\\217\\323\\346\\377\\262\\355\\"
 #"365\\377\\346\\377\\377\\377\\367\\377\\377\\377\\377\\376\\377\\377"
 #"\\371\\377\\377\\377\\361\\377\\377\\377\\311\\342\\346\\377\\277\\3"
 #"45\\360\\377\\270\\346\\375\\377\\"
 #"226\\314\\356\\377\\210\\303\\357\\377\\222\\320\\377\\377r\\261\\34"
 #"6\\377q\\270\\346\\377y\\316\\353\\377c\\264\\305\\377\\221\\313\\32"
 #"6\\377\\344\\377\\377\\377\\360\\371\\377\\377\\365\\377\\377\\377\\"
 #"336\\361\\365\\377\\325\\362\\370\\377\\306\\353\\373\\377\\250\\321"
 #"\\357\\377\\241\\320\\372\\377\\244\\325\\377\\377\\200\\262\\357\\3"
 #"77\\224\\303\\367\\377\\222\\313\\370\\377o\\271\\336\\377s\\310\\34"
 #"5\\377g\\277\\325\\377\\210\\315\\"
 #"334\\377\\352\\377\\377\\377\\350\\367\\372\\377\\321\\346\\351\\377"
 #"\\336\\377\\377\\377\\301\\350\\371\\377\\214\\267\\327\\377\\254\\3"
 #"30\\377\\377\\241\\316\\377\\377o\\235\\330\\377\\224\\302\\363\\377"
 #"\\243\\331\\377\\377q\\273\\342\\377q\\312\\352\\377d\\315\\343\\377"
 #"S\\251\\266\\377\\322\\363\\372\\377\\314\\330\\326\\377\\275\\321\\"
 #"320\\377\\330\\373\\377\\377\\300\\356\\375\\377\\247\\325\\366\\377"
 #"\\254\\333\\377\\377\\236\\315\\373\\377\\251\\331\\377\\377\\216\\3"
 #"07\\364\\377\\223\\326\\377\\377\\203\\327\\371\\377y\\331\\362\\377"
 #"]\\304\\323\\377C\\221\\233\\377\\"
 #"323\\347\\360\\377\\321\\322\\315\\377\\220\\231\\226\\377\\325\\355"
 #"\\355\\377\\326\\373\\377\\377\\271\\347\\377\\377}\\262\\322\\377\\"
 #"225\\313\\355\\377\\260\\353\\377\\377\\205\\311\\356\\377e\\263\\32"
 #"7\\377\\202\\331\\365\\377s\\314\\336\\377L\\233\\237\\377O\\206\\20"
 #"3\\377\\337\\352\\356\\377\\377\\366\\362\\377\\214~{\\377\\243\\234"
 #"\\226\\377\\320\\334\\334\\377\\267\\342\\353\\377\\236\\333\\355\\3"
 #"77\\244\\350\\375\\377\\215\\331\\361\\377\\204\\323\\361\\377u\\310"
 #"\\346\\377c\\267\\317\\377V\\232\\243\\377i\\213z\\377\\232\\246\\22"
 #"0\\377\\377\\377\\375\\377\\377\\371\\370\\377\\323\\276\\273\\377U="
 #"9\\377\\206{w\\377\\237\\257\\256\\377\\243\\307\\305\\377\\223\\303"
 #"\\303\\377\\212\\300\\302\\377\\20"
 #"3\\267\\302\\377x\\256\\270\\377g\\234\\242\\377`\\207\\202\\377\\\\"
 #"aK\\377\\337\\327\\300\\377\\377\\"
 #"376\\370\\377\\377\\373\\376\\377\\377\\363\\366\\377Z@C\\377E($\\37"
 #"7nRF\\377\\207q\\\\\\377\\200rW\\37"
 #"7\\200wZ\\377\\205{b\\377\\205}f\\377tnV\\377LJ5\\377VRF\\377\\367\\"
 #"364\\355\\377\\376\\373\\366\\377\\377\\375\\377\\377\\377\\374\\377"
 #"\\377\\207su\\377C$!\\377Q*\\e\\377J\\\"\\t\\377P-\\21\\377V5\\26\\3"
 #"77Y6\\32\\377S0\\24\\377E&\\n\\377,\\26\\1\\377voi\\377\\377\\377\\3"
 #"77\\377\\377\\377\\373\\377\\377\\"
 #"377\\377\\377\\377\\374\\375\\377\\275\\263\\262\\3779+(\\377Q@8\\37"
 #"7N<2\\377TA=\\377N;7\\377F3-\\377A*$\\377B&\\\"\\377/\\34\\30\\377\\"
 #"273\\266\\263\\377\\376\\376\\374\\377\\377\\372\\367\\377\\373\\371"
 #"\\372\\377\\377\\376\\374\\377\\370\\367\\365\\377\\206\\202\\177\\3"
 #"773.*\\377C;9\\377MBH\\377PCL\\37"
 #"7J;B\\377F7<\\377/\\36$\\377\\211}\\201\\377\\373\\371\\372\\377\\37"
 #"6\\377\\377\\377\\377\\375\\372\\377\\377\\376\\375\\377\\377\\377\\"
 #"375\\377\\377\\377\\377\\377\\376\\376\\376\\377\\313\\307\\306\\377"
 #"\\222\\212\\210\\377ykk\\377s`b\\377{kn\\377\\217\\203\\207\\377\\31"
 #"1\\304\\310\\377\\376\\377\\377\\377\\374\\377\\377\\377\\374\\375\\"
 #"377\\377\\374\\374\\374\" 15 15) 0 1 1 #hash()))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(stru"
 #"ct:point 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 50"
 #"0 500) #(struct:point 0 500)) outline #(struct:pen \"black\" 2 solid"
 #" round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 500 0) #(struct:poin"
 #"t 500 500) #(struct:point 0 500)) 255 \"white\")))))))))))))))))))))"
 #") #(struct:bb 500 500 500) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";; last-scene: World -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; draws an end game screen based on the final World. "
0 0 23 29 1 #"\n"
0 0 17 3 38 #";;   shows the player's score and time"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"last-scene"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"last-scene"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 23 3 2 #" ("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 13 #"string-append"
0 0 23 3 2 #" ("
0 0 14 3 11 #"player-name"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 19 3 7 #"\" ate \""
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 12 #"player-score"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 19 3 11 #"\" cupcakes\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 20 3 2 #"24"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"last-scene"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 12           4 4 4049
(
 #"(#(struct:overlay #(struct:translate 122.0 238.0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 6.5 12.0 #(struct:text \"e\" 0 1 \"red\" 24 "
 #"#f swiss normal normal #f))) #(struct:translate 13.0 0.0 #(struct:tr"
 #"anslate 6.0 12.0 #(struct:text \"x\" 0 1 \"red\" 24 #f swiss normal "
 #"normal #f))))) #(struct:translate 25.0 0.0 #(struct:translate 6.5 12"
 #".0 #(struct:text \"a\" 0 1 \"red\" 24 #f swiss normal normal #f)))))"
 #" #(struct:translate 38.0 0.0 #(struct:translate 10.0 12.0 #(struct:t"
 #"ext \"m\" 0 1 \"red\" 24 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 58.0 0.0 #(struct:translate 6.5 12.0 #(struct:text \"p\" 0 1 "
 #"\"red\" 24 #f swiss normal normal #f))))) #(struct:translate 71.0 0."
 #"0 #(struct:translate 2.5 12.0 #(struct:text \"l\" 0 1 \"red\" 24 #f "
 #"swiss normal normal #f))))) #(struct:translate 76.0 0.0 #(struct:tra"
 #"nslate 6.5 12.0 #(struct:text \"e\" 0 1 \"red\" 24 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 89.0 0.0 #(struct:translate 3.5 12."
 #"0 #(struct:text \" \" 0 1 \"red\" 24 #f swiss normal normal #f))))) "
 #"#(struct:translate 96.0 0.0 #(struct:translate 6.5 12.0 #(struct:tex"
 #"t \"a\" 0 1 \"red\" 24 #f swiss normal normal #f))))) #(struct:trans"
 #"late 109.0 0.0 #(struct:translate"
 #" 3.5 12.0 #(struct:text \"t\" 0 1 \"red\" 24 #f swiss normal normal "
 #"#f))))) #(struct:translate 116.0 0.0 #(struct:translate 6.5 12.0 #(s"
 #"truct:text \"e\" 0 1 \"red\" 24 #f swiss normal normal #f))))) #(str"
 #"uct:translate 129.0 0.0 #(struct:translate 3.5 12.0 #(struct:text \""
 #" \" 0 1 \"red\" 24 #f swiss normal normal #f))))) #(struct:translate"
 #" 136.0 0.0 #(struct:translate 6.5 12.0 #(struct:text \"0\" 0 1 \"red"
 #"\" 24 #f swiss normal normal #f))))) #(struct:translate 149.0 0.0 #("
 #"struct:translate 3.5 12.0 #(struct:text \" \" 0 1 \"red\" 24 #f swis"
 #"s normal normal #f))))) #(struct:translate 156.0 0.0 #(struct:transl"
 #"ate 6.0 12.0 #(struct:text \"c\" 0 1 \"red\" 24 #f swiss normal norm"
 #"al #f))))) #(struct:translate 168.0 0.0 #(struct:translate 6.5 12.0 "
 #"#(struct:text \"u\" 0 1 \"red\" 24 #f swiss normal normal #f))))) #("
 #"struct:translate 181.0 0.0 #(struct:translate 6.5 12.0 #(struct:text"
 #" \"p\" 0 1 \"red\" 24 #f swiss normal normal #f))))) #(struct:transl"
 #"ate 194.0 0.0 #(struct:translate 6.0 12.0 #(struct:text \"c\" 0 1 \""
 #"red\" 24 #f swiss normal normal #f))))) #(struct:translate 206.0 0.0"
 #" #(struct:translate 6.5 12.0 #(struct:text \"a\" 0 1 \"red\" 24 #f s"
 #"wiss normal normal #f))))) #(struct:translate 219.0 0.0 #(struct:tra"
 #"nslate 6.0 12.0 #(struct:text \"k\" 0 1 \"red\" 24 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 231.0 0.0 #(struct:translate 6.5 12"
 #".0 #(struct:text \"e\" 0 1 \"red\" 24 #f swiss normal normal #f)))))"
 #" #(struct:translate 244.0 0.0 #(struct:translate 6.0 12.0 #(struct:t"
 #"ext \"s\" 0 1 \"red\" 24 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) "
 #"#(struct:point 500 500) #(struct:point 0 500)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 500 0) #(struct:po"
 #"int 500 500) #(struct:point 0 500)) outline #(struct:pen \"black\" 2"
 #" solid round round)))) #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:point 0 0) #(struct:point 500 0) #(struc"
 #"t:point 500 500) #(struct:point 0 500)) 255 \"white\")))))))) #(stru"
 #"ct:bb 500.0 500.0 500.0) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; Helper Functions"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; get-user: Room -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; gets the user in the room"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"player-name"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-user"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 3 #")) "
0 0 19 3 9 #"\"example\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; get-walkers: Room -> [Listof Player]"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; gets the walkers in the room"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"get-walkers"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"get-walkers"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"player-name"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 11 #"get-walkers"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 4 #"))) "
0 0 19 3 8 #"\"walker\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; overlay-posn: Image [Listof Posn] Image -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";; takes a list of posns and overlays an image on the base image for"
 #" each"
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"overlay-posn"
0 0 23 3 1 #" "
0 0 14 3 8 #"posn-pic"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"overlay-posn"
0 0 23 3 1 #" "
0 0 14 3 4 #"icon"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 4 #"icon"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 1 #"i"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 14 3 5 #"scene"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 14 3 3 #"lop"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"overlay-posn"
0 0 23 3 1 #" "
0 0 14 3 7 #"WAY-PIC"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 7 #"WAY-PIC"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 4 #"))  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; overlay-players : [Listof Player] Image -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; overlays all players on base image"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"overlay-players"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"image"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"overlay-players"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 5 #"image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 23 3 1 #" "
0 0 14 3 14 #"overlay-player"
0 0 23 3 1 #" "
0 0 14 3 5 #"image"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"overlay-players"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"p1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 7 #"p2-jump"
0 0 23 3 2 #") "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 14 #"overlay-player"
0 0 23 3 1 #" "
0 0 14 3 7 #"p2-jump"
0 0 23 3 2 #" ("
0 0 14 3 14 #"overlay-player"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; overlay-player: Player Image -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; draw player on the image"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"overlay-player"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 5 #"image"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"overlay-player"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 5 #"image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 14 3 5 #"image"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"overlay-player"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 9 #"HUMAN-PIC"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; queue-waypoint: Player Waypoint -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; adds a given waypoint to the bottom of the waypoint queue"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"queue-waypoint"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 8 #"waypoint"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"queue-waypoint"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 8 #"waypoint"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 3 6 #"      "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 11 #"player-name"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 12 #")           "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"queue"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 8 #"waypoint"
0 0 23 3 9 #")        "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 12 #"player-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 2 #" ("
0 0 14 3 14 #"queue-waypoint"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 5 #")))) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 2 #" ("
0 0 14 3 14 #"queue-waypoint"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 5 #")))) "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; increment-score: Player -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; increments the given player's score by 1"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"increment-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"increment-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 11 #"player-name"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 12 #")           "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 8 #")       "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"add1"
0 0 23 3 2 #" ("
0 0 14 3 12 #"player-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"player-score"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"player-score"
0 0 23 3 2 #" ("
0 0 14 3 15 #"increment-score"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; make-posn-list: Number -> [Listof Posn]"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; makes a list with a given Number of random Posns"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 1 #" "
0 0 14 3 13 #"SCENE-PADDING"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; make-random-posn: Image Number -> Posn"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; makes a posn inside the graphics coordinates "
0 0 23 29 1 #"\n"
0 0 17 3 38 #";;   of the image with a given padding"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 23 3 1 #" "
0 0 14 3 7 #"padding"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 23 3 1 #" "
0 0 14 3 7 #"padding"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"padding"
0 0 23 3 2 #" ("
0 0 14 3 6 #"random"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 7 #"padding"
0 0 23 3 5 #")))) "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"padding"
0 0 23 3 2 #" ("
0 0 14 3 6 #"random"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 7 #"padding"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #")) "
0 0 20 3 3 #"180"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 1 #" "
0 0 20 3 3 #"200"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #")) "
0 0 20 3 3 #"180"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; make-walkers: Number -> [Listof Player]"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; make a list of players"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-walkers"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-walkers"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 8 #"redirect"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 11 #"make-player"
0 0 23 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 16 #"make-random-posn"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #" ("
0 0 14 3 6 #"random"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"D"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 14 #"make-posn-list"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 15 #"make-walker-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 12 #"make-walkers"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-walkers"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 3 #"())"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-walkers"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; make-walker-pic : Number -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; generates a random picture for a walker"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-walker-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-walker-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"circle"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-color"
0 0 23 3 2 #" ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"255"
0 0 23 3 3 #") ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"255"
0 0 23 3 3 #") ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"255"
0 0 23 3 2 #") "
0 0 20 3 3 #"255"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"image?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-walker-pic"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; move-all-players : Room -> Room"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";; iterates through each player in the room and moves them appropria"
 #"tely"
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"move-all-players"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"move-all-players"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 3 #"map"
0 0 23 3 1 #" "
0 0 14 3 4 #"move"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"move-all-players"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"130"
0 0 23 3 1 #" "
0 0 20 3 3 #"156"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"234"
0 0 23 3 1 #" "
0 0 20 3 2 #"76"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"example\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 20 3 1 #"'"
0 0 23 3 3 #"() "
0 2          19 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\32\b"
 #"\6\0\0\0\255\277\234\363\0\0\6\370IDATH\211]\226Yl\234W\25"
 #"\307\177\367\336\357\233\361\254\36/3v"
 #"\274\20\307\211\2358n\342f!q\232\270YQ\35\n\25\2D\4\210n\244\""
 #"\242,\355\3\22Ry\202\27T\251 !\201\4\2\204\324\202Z\20\2\322\204\246"
 #"\201\240\204\244\302J\28\211S\333\261"
 #"\223x\231x\231\314x\231}\276\355\3620iZq^\256\256\256t\256\376\377s"
 #"\357\371\35\241\35\255]\0170A\3\322"
 #"\363\220\2\320\26\340\201P\340y\344\246\223\314LM\20\212\5Yu,:6m"
 #"'\34\255G\341\2\2\a\3]M\3\256\aB\2`\0(\3\\\300u\35\f"
 #"e\00067\257^f.9M4\34a\364\306uf\306\306Y\315dp\245E"
 #"\272\220\347\304K\337e\367\300\343(_"
 #"\0\244\17\4\325\320\200\250n<\r\302"
 #"\323\256\206\17\317\301\3\257\302\3117~"
 #"\315w\276\375-^|\341\31\2425&\252\354`\225\212D\242A\22m-\214\316"
 #"\3140\223Z\346\251\317~\231=\a\6!\24A#\21\256\aR\242\265\4\371\301"
 #"\5Z\343:\16\206Q\265cf\354\6\277\377\335/\330\273\275\227\r-q2\311"
 #"Yr\3673\344\263Y\224\4_8H}[+\377\36\31\347\365\267\336\341\363O"
 #"\277\300W\276\376\"f \b\332\0$ZH\34\rRh\t\236\250ZS\252\360"
 #"\307_\376\206#{\6\370\344\321\243|"
 #"|\327\16\374\270\204\375\212P\320$V\27$\30\365S\37\217R\37\vr`\340"
 #"1\216}\3563\374\354\307\257\361\336\271"
 #"3\200\3\256\3\302C\343\"\5H\267"
 #"\342 \4\224W\226\371\346\211\343"
 #"|\343\304\327\370\303\233\277e\343\372N\226R)\226"
 #"\323\367\361*%LC \205\207\326\232J\245\202\337"
) 500
(
 #"\347\2439\236\340\360\301Cl\353\333\312"
 #"\17\276\367\n\351\251;`\bl\327A"
 #"\240\21\330H\3457@\270\234\177\367m"
 #"\316\236\376\23?\374\321\367\351\335\361\b"
 #"JJ\234|\211\374\312*\305\\\36\247P\300\312\25(\346\362d3Y\212+\25"
 #"\360\24m\35\235\364\367\357b\370\332\24"
 #"C\227.\342\272\16B)\4 \252U\361\300\265\2713\371>\211\206({\36\337"
 #"\203\21\217\201\326H\r\2464Q\236@\270\2\211\201)|H\341c~.M\245"
 #"\354A\242\t\345\3633\270\177+\377\271r\205L&\203FS}8\2\t\36V"
 #"\251\300\302\302<\237x\342\b\315-M"
 #"\340\331x\256C\270\266\26S\231\344V"
 #"\2138\266\2406\32\307P!\202\201:\352\e[\251\t\327\2014\350\352\351aC"
 #"W\27\343\343\343\334z\377&\6\22\253R\1-\220\0\276@\2205\215M\270E"
 #"\233\364\302\"8.\3220\261Jef\347S\24,\207\344\\\206\321[\323\\\277"
 #"u\207\277\236\273\300_N\236\342\336\334"
 #"<x\232\356\236\315,gs\\\2720\204O\b\4\32\237\317\17Zc\270\216\203"
 #"B\361\330\266~\236\177\355'<\373\334"
 #"q\254\205%\316\237\37237\256\16\261"
 #"\2604\307\316\276\35t\264\266\363\217\363"
 #"\227\30\32\35\306\301#j\206p|>"
 #"^\336\271\213\372\306F\244\241\260mP"
 #"\266\5\266\5\312\17B!\225\241\0A[\274\5\277P\4\244bb\344:\27\316"
 #"\274\303r&\305\331s\327\t\307\e\331"
 #"}\360\20\365k\326\220+\344)\346s"
 #"\364\357\332\216O\302\304\265k\250p\230"
 #"x<N[k\224\277\235:\211\263\224"
 #"\1\333\256*\360p\221\322\305\266\212\264"
 #"5\305\321\245\34\246[\346\360\376~F"
 #"F\206\211\372\241\263c\35y\327\342\300\340ab\365\1\206/\17\241\363+"
 #"|l\355Z\264]\206r\211\355[\372X\234\236!\237J\221N\316\320\34k"
) 500
(
 #"\0\1\206\203\207\17\210\324F)\224\362\254f\227hmk\"s\3576]]]"
 #"\274\365\3463\264l\352\301*\33045"
 #"5\321\275\276\23\263RB\270\36k\333"
 #"\333\361\e\n\264\346\300\300>\376\373\336"
 #"%*\305\2\206\266\301\220 \4RQ\3Z\222u*|\351\370sx\1\205m"
 #"@\274\275\235\201#\203\24+\200cR)X\230\30(i\362\366\2313\244Wr"
 #"\314\334[ \221H\200!\b4\304yt\363f\354R\1%=\0\234r\5C"
 #"#@\31\330\206I$\21\2471\321L4Z\203\256k\340\354\331\277S\327\330J"
 #"8\332\300\335\211Yfg&q\355\25\332:\326r\356\342E\326-fh\355\355"
 #"e[S3\263c\23D\23-|\341\331\347\251\353\334\0\36\0305~\214\a\375"
 #"\225\206\3466\2727m\241\222-0:1Njf\232\333\243\243|\365\304An"
 #"\216\215\362\322\313\257`\331.\307\216\35"
 #"b\367\300\0\205\242M(\22\341\356\355;\364\355\256@$F\327\276CUE\301"
 #"\20x\0\22akG+<\204\v,\247X\232\231d\370_\347Y\270{\213D"
 #"\"\201/\24\341\336\3022VI\200\360"
 #"\210\306\24\247O\237\304*U\350\337\267"
 #"\237\332\246f\236\372\342\323D\332\272\300"
 #"\37Dk\215\326\32\317\3\30300\24\252\252A9P_O}\270\217Xr\226"
 #"L\352\36#\243#\344-\311\340\23\237"
 #"\246\326\37\344\366\370\30\263s\323l\351"
 #"\351e%_ \321\322\n\206A6\233%\342y\17\211\"\245D\312\217\20\255\n"
 #"\"\211\355:\370\374!\0343\214\255|\254\337\324Kw\3576L\24?}\365U"
 #"\306o\2160\370\251'iiocc\242\t_\240\206\262\343!\204\300\262,|"
 #"5\232\377\17C<Hn\271\32\303\f\241\201\366\215=\270\371\fT"
 #"V)[%\362\3052\275\217l$\26\16`\3336\3220\331\266s"
) 341
(
 #"'eOS,\26\211F\243\370B!\20\342!\31]\327E)UU \250\2"
 #"G\3\256\vk\326\255gM<\306\360?\337\245>\26\"\227N\321\275\271\a\333"
 #"r\261\205\246{\313\26\"\261F\2B\23\216\332\17H\353=X<\244\224(\245"
 #"\320ZW\273\251\3538H@;\325\377\201\v\4\"lzt'\205B\16\2414"
 #"\227\257]chd\204\331\314\22\251\325"
 #"\25\322\331,\313\271\"\311d\222B\241@j~\36t\325\367\17\n-\204@z"
 #"\236\207a\30x\16\230\262\312|\204\0aR\266]JV\205\211\333\223\330B0"
 #"\277\274\304\305+W\31\31\237\244\255\243"
 #"\223\321\261q\346\346\347\361\204`r\342"
 #"\16\236\353\"\245D\210\17G\b)\245\201\326\32\245>2Z\bErj\222\251"
 #"\344,\266\3\351\245U\216<y\0243"
 #"\24\342V\262\310\317\177\365:\205\212E\264.F&\263L0\30$\235N\223\313"
 #"\345p\34\247\232B\210\252\n\255\265~8\317\0X\200tY\\\234F\227W\210"
 #"\212\n\305\325\f\221\272F\246\222s,.\346p\20\354\335\273\227|~\205lj"
 #"\221u[\373\230\274{\237x{\a\376\200\217\232\232\32\34\247\352\314"
 #"\377\0\313\3535\344\25\1\26}\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"walker\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"90"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 3 #")) "
0 12           4 4 86
(
 #"(#(struct:translate 7 7 #(struct:ellipse 14 14 0 255 \"red\")) #(str"
 #"uct:bb 14 14 14) #f)"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; move: Player -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; chooses whether the player should nudge or "
0 0 23 29 1 #"\n"
0 0 17 3 50 #";;   jump based on it's location and next waypoint"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"move"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"move"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 14 #"has-waypoints?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"jump?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 18 #"has-next-waypoint?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 8 #"redirect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"jump"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"jump"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 5 #"nudge"
0 0 23 3 2 #" ("
0 0 14 3 8 #"redirect"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 5 #")))] "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 2 #" ("
0 0 14 3 4 #"move"
0 0 23 3 1 #" "
0 0 14 3 7 #"p2-jump"
0 0 23 3 4 #"))) "
0 0 20 3 2 #"25"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"move"
0 0 23 3 1 #" "
0 0 14 3 10 #"p3-no-move"
0 0 23 3 2 #") "
0 0 14 3 10 #"p3-no-move"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 2 #" ("
0 0 14 3 4 #"move"
0 0 23 3 1 #" "
0 0 14 3 9 #"p4-no-way"
0 0 23 3 4 #"))) "
0 0 20 3 2 #"21"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; has-waypoints? : Player -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; returns if the player has any waypoints"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"has-waypoints?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"has-waypoints?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"has-waypoints?"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"has-waypoints?"
0 0 23 3 1 #" "
0 0 14 3 10 #"p3-no-move"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; has-next-waypoint? : Player -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; returns if the player has more than one waypoint"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"has-next-waypoint?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"has-next-waypoint?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"has-next-waypoint?"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"has-next-waypoint?"
0 0 23 3 1 #" "
0 0 14 3 9 #"p4-no-way"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; nudge: Player -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; move the player based their velocity"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"nudge"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"nudge"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"vel"
0 0 23 3 2 #" ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 11 #"player-name"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 18 #"velocity-magnitude"
0 0 23 3 1 #" "
0 0 14 3 3 #"vel"
0 0 23 3 3 #") ("
0 0 14 3 3 #"cos"
0 0 23 3 2 #" ("
0 0 14 3 14 #"velocity-angle"
0 0 23 3 1 #" "
0 0 14 3 3 #"vel"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 18 #"velocity-magnitude"
0 0 23 3 1 #" "
0 0 14 3 3 #"vel"
0 0 23 3 3 #") ("
0 0 14 3 3 #"sin"
0 0 23 3 2 #" ("
0 0 14 3 14 #"velocity-angle"
0 0 23 3 1 #" "
0 0 14 3 3 #"vel"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 3 #"vel"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 10 #"player-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 12 #"player-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 18 #"))))              "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"nudge"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 4 #"))) "
0 0 20 3 2 #"27"
0 0 23 3 1 #" "
0 0 20 3 2 #".2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 2 #" ("
0 0 14 3 5 #"nudge"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 4 #"))) "
0 0 20 3 2 #"27"
0 0 23 3 1 #" "
0 0 20 3 2 #".2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; jump?: Player -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; is the distance of from the player to its its next waypoint is le"
 #"ss than "
) 0 0 23 29 1 #"\n"
0 0 17 3 56
(
 #";;    or equal to the Player\342\200\231s Velocity\342\200\231s Magn"
 #"itude?"
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"jump?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"jump?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 18 #"velocity-magnitude"
0 0 23 3 2 #" ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"jump?"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"jump?"
0 0 23 3 1 #" "
0 0 14 3 7 #"p2-jump"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; jump: Player -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; relocates the player to the next waypoint"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"jump"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"jump"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 11 #"player-name"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 12 #"player-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 2 #" ("
0 0 14 3 4 #"jump"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 2 #" ("
0 0 14 3 4 #"jump"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";; redirect: Player -> Player"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; changes the direction of the Player to be towards its first waypo"
 #"int"
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"redirect"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 49 #")                                                "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"redirect"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 11 #"player-name"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 8 #"fix-atan"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 5 #"))) ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 5 #"))) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 18 #"velocity-magnitude"
0 0 23 3 2 #" ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 16 #"player-waypoints"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 10 #"player-pic"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 12 #"player-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 14 #"velocity-angle"
0 0 23 3 2 #" ("
0 0 14 3 15 #"player-velocity"
0 0 23 3 2 #" ("
0 0 14 3 8 #"redirect"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 5 #"))) ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 3 #"1/4"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 2 #") "
0 0 20 3 2 #".2"
0 0 23 3 3 #")  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; fix-atan: Number Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; fix the angle problem due to the restricted range of the arctange"
 #"nt"
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fix-atan"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fix-atan"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"atan"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 2 #" ("
0 0 14 3 4 #"atan"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 2 #"-2"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fix-atan"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 2 #".1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fix-atan"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #".1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; update-scores: Room -> Room"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; increments each player' score if they are on a cupcake"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"update-scores"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"update-scores"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 11 #"on-cupcake?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 15 #"increment-score"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"update-scores"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"130"
0 0 23 3 1 #" "
0 0 20 3 3 #"156"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"234"
0 0 23 3 1 #" "
0 0 20 3 2 #"76"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"example\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 2          19 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\32\b"
 #"\6\0\0\0\255\277\234\363\0\0\6\370IDATH\211]\226Yl\234W\25"
 #"\307\177\367\336\357\233\361\254\36/3v"
 #"\274\20\307\211\2358n\342f!q\232\270YQ\35\n\25\2D\4\210n\244\""
 #"\242,\355\3\22Ry\202\27T\251 !\201\4\2\204\324\202Z\20\2\322\204\246"
 #"\201\240\204\244\302J\28\211S\333\261"
 #"\223x\231x\231\314x\231}\276\355\3620iZq^\256\256\256t\256\376\377s"
 #"\357\371\35\241\35\255]\0170A\3\322"
 #"\363\220\2\320\26\340\201P\340y\344\246\223\314LM\20\212\5Yu,:6m"
 #"'\34\255G\341\2\2\a\3]M\3\256\aB\2`\0(\3\\\300u\35\f"
 #"e\00067\257^f.9M4\34a\364\306uf\306\306Y\315dp\245E"
 #"\272\220\347\304K\337e\367\300\343(_"
 #"\0\244\17\4\325\320\200\250n<\r\302"
 #"\323\256\206\17\317\301\3\257\302\3117~"
 #"\315w\276\375-^|\341\31\2425&\252\354`\225\212D\242A\22m-\214\316"
 #"\3140\223Z\346\251\317~\231=\a\6!\24A#\21\256\aR\242\265\4\371\301"
 #"\5Z\343:\16\206Q\265cf\354\6\277\377\335/\330\273\275\227\r-q2\311"
 #"Yr\3673\344\263Y\224\4_8H}[+\377\36\31\347\365\267\336\341\363O"
 #"\277\300W\276\376\"f \b\332\0$ZH\34\rRh\t\236\250ZS\252\360"
 #"\307_\376\206#{\6\370\344\321\243|"
 #"|\327\16\374\270\204\375\212P\320$V\27$\30\365S\37\217R\37\vr`\340"
 #"1\216}\3563\374\354\307\257\361\336\271"
 #"3\200\3\256\3\302C\343\"\5H\267"
 #"\342 \4\224W\226\371\346\211\343"
 #"|\343\304\327\370\303\233\277e\343\372N\226R)\226"
 #"\323\367\361*%LC \205\207\326\232J\245\202\337"
) 500
(
 #"\347\2439\236\340\360\301Cl\353\333\312"
 #"\17\276\367\n\351\251;`\bl\327A"
 #"\240\21\330H\3457@\270\234\177\367m"
 #"\316\236\376\23?\374\321\367\351\335\361\b"
 #"JJ\234|\211\374\312*\305\\\36\247P\300\312\25(\346\362d3Y\212+\25"
 #"\360\24m\35\235\364\367\357b\370\332\24"
 #"C\227.\342\272\16B)\4 \252U\361\300\265\2713\371>\211\206({\36\337"
 #"\203\21\217\201\326H\r\2464Q\236@\270\2\211\201)|H\341c~.M\245"
 #"\354A\242\t\345\3633\270\177+\377\271r\205L&\203FS}8\2\t\36V"
 #"\251\300\302\302<\237x\342\b\315-M"
 #"\340\331x\256C\270\266\26S\231\344V"
 #"\2138\266\2406\32\307P!\202\201:\352\e[\251\t\327\2014\350\352\351aC"
 #"W\27\343\343\343\334z\377&\6\22\253R\1-\220\0\276@\2205\215M\270E"
 #"\233\364\302\"8.\3220\261Jef\347S\24,\207\344\\\206\321[\323\\\277"
 #"u\207\277\236\273\300_N\236\342\336\334"
 #"<x\232\356\236\315,gs\\\2720\204O\b\4\32\237\317\17Zc\270\216\203"
 #"B\361\330\266~\236\177\355'<\373\334"
 #"q\254\205%\316\237\37237\256\16\261"
 #"\2604\307\316\276\35t\264\266\363\217\363"
 #"\227\30\32\35\306\301#j\206p|>"
 #"^\336\271\213\372\306F\244\241\260mP"
 #"\266\5\266\5\312\17B!\225\241\0A[\274\5\277P\4\244bb\344:\27\316"
 #"\274\303r&\305\331s\327\t\307\e\331"
 #"}\360\20\365k\326\220+\344)\346s"
 #"\364\357\332\216O\302\304\265k\250p\230"
 #"x<N[k\224\277\235:\211\263\224"
 #"\1\333\256*\360p\221\322\305\266\212\264"
 #"5\305\321\245\34\246[\346\360\376~F"
 #"F\206\211\372\241\263c\35y\327\342\300\340ab\365\1\206/\17\241\363+"
 #"|l\355Z\264]\206r\211\355[\372X\234\236!\237J\221N\316\320\34k"
) 500
(
 #"\0\1\206\203\207\17\210\324F)\224\362\254f\227hmk\"s\3576]]]"
 #"\274\365\3463\264l\352\301*\33045"
 #"5\321\275\276\23\263RB\270\36k\333"
 #"\333\361\e\n\264\346\300\300>\376\373\336"
 #"%*\305\2\206\266\301\220 \4RQ\3Z\222u*|\351\370sx\1\205m"
 #"@\274\275\235\201#\203\24+\200cR)X\230\30(i\362\366\2313\244Wr"
 #"\314\334[ \221H\200!\b4\304yt\363f\354R\1%=\0\234r\5C"
 #"#@\31\330\206I$\21\2471\321L4Z\203\256k\340\354\331\277S\327\330J"
 #"8\332\300\335\211Yfg&q\355\25\332:\326r\356\342E\326-fh\355\355"
 #"e[S3\263c\23D\23-|\341\331\347\251\353\334\0\36\0305~\214\a\375"
 #"\225\206\3466\2727m\241\222-0:1Njf\232\333\243\243|\365\304An"
 #"\216\215\362\322\313\257`\331.\307\216\35"
 #"b\367\300\0\205\242M(\22\341\356\355;\364\355\256@$F\327\276CUE\301"
 #"\20x\0\22akG+<\204\v,\247X\232\231d\370_\347Y\270{\213D"
 #"\"\201/\24\341\336\3022VI\200\360"
 #"\210\306\24\247O\237\304*U\350\337\267"
 #"\237\332\246f\236\372\342\323D\332\272\300"
 #"\37Dk\215\326\32\317\3\30300\24\252\252A9P_O}\270\217Xr\226"
 #"L\352\36#\243#\344-\311\340\23\237"
 #"\246\326\37\344\366\370\30\263s\323l\351"
 #"\351e%_ \321\322\n\206A6\233%\342y\17\211\"\245D\312\217\20\255\n"
 #"\"\211\355:\370\374!\0343\214\255|\254\337\324Kw\3576L\24?}\365U"
 #"\306o\2160\370\251'iiocc\242\t_\240\206\262\343!\204\300\262,|"
 #"5\232\377\17C<Hn\271\32\303\f\241\201\366\215=\270\371\fT"
 #"V)[%\362\3052\275\217l$\26\16`\3336\3220\331\266s"
) 341
(
 #"'eOS,\26\211F\243\370B!\20\342!\31]\327E)UU \250\2"
 #"G\3\256\vk\326\255gM<\306\360?\337\245>\26\"\227N\321\275\271\a\333"
 #"r\261\205\246{\313\26\"\261F\2B\23\216\332\17H\353=X<\244\224(\245"
 #"\320ZW\273\251\3538H@;\325\377\201\v\4\"lzt'\205B\16\2414"
 #"\227\257]chd\204\331\314\22\251\325"
 #"\25\322\331,\313\271\"\311d\222B\241@j~\36t\325\367\17\n-\204@z"
 #"\236\207a\30x\16\230\262\312|\204\0aR\266]JV\205\211\333\223\330B0"
 #"\277\274\304\305+W\31\31\237\244\255\243"
 #"\223\321\261q\346\346\347\361\204`r\342"
 #"\16\236\353\"\245D\210\17G\b)\245\201\326\32\245>2Z\bErj\222\251"
 #"\344,\266\3\351\245U\216<y\0243"
 #"\24\342V\262\310\317\177\365:\205\212E\264.F&\263L0\30$\235N\223\313"
 #"\345p\34\247\232B\210\252\n\255\265~8\317\0X\200tY\\\234F\227W\210"
 #"\212\n\305\325\f\221\272F\246\222s,.\346p\20\354\335\273\227|~\205lj"
 #"\221u[\373\230\274{\237x{\a\376\200\217\232\232\32\34\247\352\314"
 #"\377\0\313\3535\344\25\1\26}\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"walker\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"90"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 3 #")) "
0 12           4 4 86
(
 #"(#(struct:translate 7 7 #(struct:ellipse 14 14 0 255 \"red\")) #(str"
 #"uct:bb 14 14 14) #f)"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; on-cupcake? [Listof Cupcake] Player -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";; returns if the player is on any of the cupcakes"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"on-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 3 #"loc"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"on-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 3 #"loc"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"c"
0 0 23 3 3 #") ("
0 0 14 3 17 #"on-given-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 3 #")) "
0 0 14 3 3 #"loc"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"on-cupcake?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; on-given-cupcake?: Player Cupcake -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; is the player on a given cupcake?"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"on-given-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"on-given-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 23 3 2 #" ("
0 0 14 3 10 #"player-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"CUP-PIC"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"on-given-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"on-given-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; eat-cupcakes : Room -> Room"
0 0 23 29 1 #"\n"
0 0 17 3 68
#";; for each player , remove a cupcake if that player is on a cupcake"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"eat-cupcakes"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"eat-cupcakes"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 14 3 14 #"remove-cupcake"
0 0 23 3 2 #" ("
0 0 14 3 8 #"room-loc"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #") ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 8 #"room-lop"
0 0 23 3 1 #" "
0 0 14 3 4 #"room"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"eat-cupcakes"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-room"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"130"
0 0 23 3 1 #" "
0 0 20 3 3 #"156"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"234"
0 0 23 3 1 #" "
0 0 20 3 2 #"76"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"example\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 20 3 1 #"'"
0 0 23 3 3 #"() "
0 2          19 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\30\0\0\0\32\b"
 #"\6\0\0\0\255\277\234\363\0\0\6\370IDATH\211]\226Yl\234W\25"
 #"\307\177\367\336\357\233\361\254\36/3v"
 #"\274\20\307\211\2358n\342f!q\232\270YQ\35\n\25\2D\4\210n\244\""
 #"\242,\355\3\22Ry\202\27T\251 !\201\4\2\204\324\202Z\20\2\322\204\246"
 #"\201\240\204\244\302J\28\211S\333\261"
 #"\223x\231x\231\314x\231}\276\355\3620iZq^\256\256\256t\256\376\377s"
 #"\357\371\35\241\35\255]\0170A\3\322"
 #"\363\220\2\320\26\340\201P\340y\344\246\223\314LM\20\212\5Yu,:6m"
 #"'\34\255G\341\2\2\a\3]M\3\256\aB\2`\0(\3\\\300u\35\f"
 #"e\00067\257^f.9M4\34a\364\306uf\306\306Y\315dp\245E"
 #"\272\220\347\304K\337e\367\300\343(_"
 #"\0\244\17\4\325\320\200\250n<\r\302"
 #"\323\256\206\17\317\301\3\257\302\3117~"
 #"\315w\276\375-^|\341\31\2425&\252\354`\225\212D\242A\22m-\214\316"
 #"\3140\223Z\346\251\317~\231=\a\6!\24A#\21\256\aR\242\265\4\371\301"
 #"\5Z\343:\16\206Q\265cf\354\6\277\377\335/\330\273\275\227\r-q2\311"
 #"Yr\3673\344\263Y\224\4_8H}[+\377\36\31\347\365\267\336\341\363O"
 #"\277\300W\276\376\"f \b\332\0$ZH\34\rRh\t\236\250ZS\252\360"
 #"\307_\376\206#{\6\370\344\321\243|"
 #"|\327\16\374\270\204\375\212P\320$V\27$\30\365S\37\217R\37\vr`\340"
 #"1\216}\3563\374\354\307\257\361\336\271"
 #"3\200\3\256\3\302C\343\"\5H\267"
 #"\342 \4\224W\226\371\346\211\343"
 #"|\343\304\327\370\303\233\277e\343\372N\226R)\226"
 #"\323\367\361*%LC \205\207\326\232J\245\202\337"
) 500
(
 #"\347\2439\236\340\360\301Cl\353\333\312"
 #"\17\276\367\n\351\251;`\bl\327A"
 #"\240\21\330H\3457@\270\234\177\367m"
 #"\316\236\376\23?\374\321\367\351\335\361\b"
 #"JJ\234|\211\374\312*\305\\\36\247P\300\312\25(\346\362d3Y\212+\25"
 #"\360\24m\35\235\364\367\357b\370\332\24"
 #"C\227.\342\272\16B)\4 \252U\361\300\265\2713\371>\211\206({\36\337"
 #"\203\21\217\201\326H\r\2464Q\236@\270\2\211\201)|H\341c~.M\245"
 #"\354A\242\t\345\3633\270\177+\377\271r\205L&\203FS}8\2\t\36V"
 #"\251\300\302\302<\237x\342\b\315-M"
 #"\340\331x\256C\270\266\26S\231\344V"
 #"\2138\266\2406\32\307P!\202\201:\352\e[\251\t\327\2014\350\352\351aC"
 #"W\27\343\343\343\334z\377&\6\22\253R\1-\220\0\276@\2205\215M\270E"
 #"\233\364\302\"8.\3220\261Jef\347S\24,\207\344\\\206\321[\323\\\277"
 #"u\207\277\236\273\300_N\236\342\336\334"
 #"<x\232\356\236\315,gs\\\2720\204O\b\4\32\237\317\17Zc\270\216\203"
 #"B\361\330\266~\236\177\355'<\373\334"
 #"q\254\205%\316\237\37237\256\16\261"
 #"\2604\307\316\276\35t\264\266\363\217\363"
 #"\227\30\32\35\306\301#j\206p|>"
 #"^\336\271\213\372\306F\244\241\260mP"
 #"\266\5\266\5\312\17B!\225\241\0A[\274\5\277P\4\244bb\344:\27\316"
 #"\274\303r&\305\331s\327\t\307\e\331"
 #"}\360\20\365k\326\220+\344)\346s"
 #"\364\357\332\216O\302\304\265k\250p\230"
 #"x<N[k\224\277\235:\211\263\224"
 #"\1\333\256*\360p\221\322\305\266\212\264"
 #"5\305\321\245\34\246[\346\360\376~F"
 #"F\206\211\372\241\263c\35y\327\342\300\340ab\365\1\206/\17\241\363+"
 #"|l\355Z\264]\206r\211\355[\372X\234\236!\237J\221N\316\320\34k"
) 500
(
 #"\0\1\206\203\207\17\210\324F)\224\362\254f\227hmk\"s\3576]]]"
 #"\274\365\3463\264l\352\301*\33045"
 #"5\321\275\276\23\263RB\270\36k\333"
 #"\333\361\e\n\264\346\300\300>\376\373\336"
 #"%*\305\2\206\266\301\220 \4RQ\3Z\222u*|\351\370sx\1\205m"
 #"@\274\275\235\201#\203\24+\200cR)X\230\30(i\362\366\2313\244Wr"
 #"\314\334[ \221H\200!\b4\304yt\363f\354R\1%=\0\234r\5C"
 #"#@\31\330\206I$\21\2471\321L4Z\203\256k\340\354\331\277S\327\330J"
 #"8\332\300\335\211Yfg&q\355\25\332:\326r\356\342E\326-fh\355\355"
 #"e[S3\263c\23D\23-|\341\331\347\251\353\334\0\36\0305~\214\a\375"
 #"\225\206\3466\2727m\241\222-0:1Njf\232\333\243\243|\365\304An"
 #"\216\215\362\322\313\257`\331.\307\216\35"
 #"b\367\300\0\205\242M(\22\341\356\355;\364\355\256@$F\327\276CUE\301"
 #"\20x\0\22akG+<\204\v,\247X\232\231d\370_\347Y\270{\213D"
 #"\"\201/\24\341\336\3022VI\200\360"
 #"\210\306\24\247O\237\304*U\350\337\267"
 #"\237\332\246f\236\372\342\323D\332\272\300"
 #"\37Dk\215\326\32\317\3\30300\24\252\252A9P_O}\270\217Xr\226"
 #"L\352\36#\243#\344-\311\340\23\237"
 #"\246\326\37\344\366\370\30\263s\323l\351"
 #"\351e%_ \321\322\n\206A6\233%\342y\17\211\"\245D\312\217\20\255\n"
 #"\"\211\355:\370\374!\0343\214\255|\254\337\324Kw\3576L\24?}\365U"
 #"\306o\2160\370\251'iiocc\242\t_\240\206\262\343!\204\300\262,|"
 #"5\232\377\17C<Hn\271\32\303\f\241\201\366\215=\270\371\fT"
 #"V)[%\362\3052\275\217l$\26\16`\3336\3220\331\266s"
) 341
(
 #"'eOS,\26\211F\243\370B!\20\342!\31]\327E)UU \250\2"
 #"G\3\256\vk\326\255gM<\306\360?\337\245>\26\"\227N\321\275\271\a\333"
 #"r\261\205\246{\313\26\"\261F\2B\23\216\332\17H\353=X<\244\224(\245"
 #"\320ZW\273\251\3538H@;\325\377\201\v\4\"lzt'\205B\16\2414"
 #"\227\257]chd\204\331\314\22\251\325"
 #"\25\322\331,\313\271\"\311d\222B\241@j~\36t\325\367\17\n-\204@z"
 #"\236\207a\30x\16\230\262\312|\204\0aR\266]JV\205\211\333\223\330B0"
 #"\277\274\304\305+W\31\31\237\244\255\243"
 #"\223\321\261q\346\346\347\361\204`r\342"
 #"\16\236\353\"\245D\210\17G\b)\245\201\326\32\245>2Z\bErj\222\251"
 #"\344,\266\3\351\245U\216<y\0243"
 #"\24\342V\262\310\317\177\365:\205\212E\264.F&\263L0\30$\235N\223\313"
 #"\345p\34\247\232B\210\252\n\255\265~8\317\0X\200tY\\\234F\227W\210"
 #"\212\n\305\325\f\221\272F\246\222s,.\346p\20\354\335\273\227|~\205lj"
 #"\221u[\373\230\274{\237x{\a\376\200\217\232\232\32\34\247\352\314"
 #"\377\0\313\3535\344\25\1\26}\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 11 #"make-player"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"walker\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 13 #"make-velocity"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"90"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 3 #")) "
0 12           4 4 86
(
 #"(#(struct:translate 7 7 #(struct:ellipse 14 14 0 255 \"red\")) #(str"
 #"uct:bb 14 14 14) #f)"
) 0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 62
#";; remove-cupcake: Player [Listof Cupcake] -> [Listof Cupcake]"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; remove (eat) a cupcake from the list of cupcakes (LOC)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"remove-cupcake"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 3 #"loc"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"remove-cupcake"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 3 #"loc"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"c"
0 0 23 3 3 #") ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 17 #"on-given-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 4 #"))) "
0 0 14 3 3 #"loc"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"remove-cupcake"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"remove-cupcake"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Utilities"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; distance: Posn Posn -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; calculates the distance between two posns"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 1 #" "
0 0 14 3 2 #"p2"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 3 #")) "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 1 #" "
0 0 14 3 2 #"p2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 2 #"p2"
0 0 23 3 5 #"))) ("
0 0 14 3 3 #"sqr"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 2 #"p1"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 2 #"p2"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; queue: [Listof X] X -> [Listof X]"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; puts an element at the bottom of a list "
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"queue"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 2 #"el"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"queue"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 3 #"() "
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"queue"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"queue"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 2 #"el"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 2 #",@"
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"el"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; End of Hungry Henry"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; HONORS HOMEWORK 9"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #" ("
0 0 14 3 5 #"label"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 1 #" "
0 0 14 3 5 #"width"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 24 #"; A Lego is a structure:"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";    (make-lego Number Symbol Number)"
0 0 23 29 1 #"\n"
0 0 17 3 53 #"; interpretation: (make-lego l c w) is the lego brick"
0 0 23 29 1 #"\n"
0 0 17 3 49 #"; with label l, color c, and width w (in pixels)."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"lego-template"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-width"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"green-brick"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 23 3 1 #" "
0 0 20 3 2 #"35"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 6 #"bigger"
0 0 23 3 2 #" ("
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 4 #"left"
0 0 23 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 39 #"; A LegoBldg (lego building) is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 8 #"; - Lego"
0 0 23 29 1 #"\n"
0 0 17 3 40 #"; - (make-bigger Lego LegoBldg LegoBldg)"
0 0 23 29 1 #"\n"
0 0 17 3 56 #"; interpretation: (make-bigger l lft rgt) makes a bigger"
0 0 23 29 1 #"\n"
0 0 17 3 60
#"; lego building by putting a lego brick l on top of two lego"
0 0 23 29 1 #"\n"
0 0 17 3 39 #"; buildings lft (left) and rgt (right)."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"bigger-template"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #"("
0 0 14 3 13 #"lego-template"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"           [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 13 #"lego-template"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 14 3 3 #"..."
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                        "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 15 #"bigger-template"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")) "
0 0 14 3 3 #"..."
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                        "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 15 #"bigger-template"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")) "
0 0 14 3 3 #"..."
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 14 3 11 #"green-brick"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 1H"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; count-bricks : LegoBldg -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; counts the total number of bricks in the Lego Building"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"count-bricks"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 12 #"count-bricks"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 12 #"count-bricks"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"count-bricks"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"count-bricks"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 2H"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; how-high: LegoBldg -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; counts how tall the building is"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"how-high"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 3 #"max"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 8 #"how-high"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 8 #"how-high"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 7 #"))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"how-high"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"how-high"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"how-high"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                     "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 5 #"))) ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 3H"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 55 #";; contains-colored-brick? : LegoBldg Symbol -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; takes a color and a building and says if it contains a brick of t"
 #"hat color"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 3 #") ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-color"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")) "
0 0 14 3 5 #"color"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 23 #"contains-colored-brick?"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 4h"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; find-colored-brick: LegoBld Symbol -> [Maybe Lego]"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; searches for the given color in the building and returns that leg"
 #"o"
) 0 0 23 29 1 #"\n"
0 0 17 3 31 #";;   returns false if not found"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 20 #"brick-matches-color?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 3 #") ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"this-brick"
0 0 23 3 2 #" ("
0 0 14 3 20 #"brick-matches-color?"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"left-brick"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"right-brick"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 4 #"))] "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 10 #"this-brick"
0 0 23 3 2 #") "
0 0 14 3 10 #"this-brick"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                 [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 10 #"left-brick"
0 0 23 3 2 #") "
0 0 14 3 10 #"left-brick"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                 [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 11 #"right-brick"
0 0 23 3 2 #") "
0 0 14 3 11 #"right-brick"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 6 #"]))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 2 #") "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 23 3 2 #") "
0 0 14 3 11 #"green-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 2 #") "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 2 #") "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"find-colored-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; brick-matches-color? : Lego Symbol -> [Maybe Lego]"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";; determines if the given brick has the given color"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 20 #"brick-matches-color?"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 20 #"brick-matches-color?"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 5 #"color"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #") "
0 0 14 3 5 #"color"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 4 #"lego"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"brick-matches-color?"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 2 #") "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 20 #"brick-matches-color?"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 5h"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; lb->image : LegoBldg -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; draws a building"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"lb->image"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"lb->image"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 11 #"lego->image"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 5 #"above"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lego->image"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                            ("
0 0 14 3 12 #"beside/align"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 9 #"lb->image"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 9 #"lb->image"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 7 #"))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"lb->image"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                      ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                      ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 5 #")))) "
0 12           4 4 1410
(
 #"(#(struct:overlay #(struct:translate 40 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 80 0) #(struct:poi"
 #"nt 80 10) #(struct:point 0 10)) 255 \"purple\"))) #(struct:translate"
 #" 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 60 0) #(struct:point 60 10) #(struct:poin"
 #"t 0 10)) 255 \"blue\"))) #(struct:translate 0 10 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 40 0) #(struct:point 40 10) #(struct:po"
 #"int 0 10)) 255 \"yellow\"))) #(struct:translate 40 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 40 0) #"
 #"(struct:point 40 10) #(struct:point 0 10)) 255 \"red\"))))))) #(stru"
 #"ct:translate 80 0 #(struct:overlay #(struct:translate 10 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 6"
 #"0 0) #(struct:point 60 10) #(struct:point 0 10)) 255 \"orange\"))) #"
 #"(struct:translate 0 10 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 40 0) #(struct:point 40 10) #(struct:point 0 10)) 255 \"green\"))"
 #") #(struct:translate 40 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:point 0 0) #(struct:point 40 0) #(struct:point 40 10) #(stru"
 #"ct:point 0 10)) 255 \"red\")))))))))) #(struct:bb 160 30 30) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"lb->image"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                      ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 52 #"                                                   ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                      ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 4 #"))) "
0 12           4 4 997
(
 #"(#(struct:overlay #(struct:translate 30 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 80 0) #(struct:poi"
 #"nt 80 10) #(struct:point 0 10)) 255 \"purple\"))) #(struct:translate"
 #" 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 60 0) #(struct:point 60 10) #(struct:poin"
 #"t 0 10)) 255 \"blue\"))) #(struct:translate 0 10 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 40 0) #(struct:point 40 10) #(struct:po"
 #"int 0 10)) 255 \"yellow\"))) #(struct:translate 40 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 40 0) #"
 #"(struct:point 40 10) #(struct:point 0 10)) 255 \"red\"))))))) #(stru"
 #"ct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 60 0) #(struct:point 60 10) #(struct:point"
 #" 0 10)) 255 \"orange\")))))) #(struct:bb 140 30 30) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; lego->image : Lego->Image"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; draws a single lego"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lego->image"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lego->image"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-width"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #") "
0 0 14 3 11 #"LEGO_HEIGHT"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lego->image"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 12           4 4 164
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) 255 \"red"
 #"\")) #(struct:bb 30 10 10) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lego->image"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 2 #") "
0 12           4 4 165
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 50 0) #(struct:point 50 10) #(struct:point 0 10)) 255 \"blu"
 #"e\")) #(struct:bb 50 10 10) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 6h"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; merge-lb : LegoBldg LegoBldg -> LegoBldg"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; merges two lego buildings"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 3 #") ("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 4 #")) ("
0 0 14 3 10 #"merge-lego"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 3 #") ("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 3 #") ("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 2 #") "
0 0 14 3 2 #"b2"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 3 #") ("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 11 #"make-bigger"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 10 #"merge-lego"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 2 #"b1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 2 #"b2"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"2.2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 3 #"120"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"2.2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 3 #"120"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"1.1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 4 #"3.11"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"merge-lb"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"4.4"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 20 3 3 #"160"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"2.2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 3 #"120"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"6.6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 3 #"120"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; merge-lego: Lego Lego -> Lego"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; merges two legos - assumes same color"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"merge-lego"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego1"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego2"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"merge-lego"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego1"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego1"
0 0 23 3 3 #") ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 9 #"make-lego"
0 0 23 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego1"
0 0 23 3 3 #") )"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 19 3 3 #"\".\""
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                  ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego2"
0 0 23 3 5 #")) ))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego1"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-width"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 10 #"lego-width"
0 0 23 3 1 #" "
0 0 14 3 5 #"lego2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 20 #"\"Colors don't match\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"merge-lego"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 3 #")  "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"35"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 3 #"6.7"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 7H"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #"; An OrdLegoBldg (ordered lego building) is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 9 #"; - 'none"
0 0 23 29 1 #"\n"
0 0 17 3 8 #"; - Lego"
0 0 23 29 1 #"\n"
0 0 17 3 40 #"; - (make-bigger Lego LegoBldg LegoBldg)"
0 0 23 29 1 #"\n"
0 0 17 3 62
#"; where each lego brick in the building has a unique label and"
0 0 23 29 1 #"\n"
0 0 17 3 61
#"; where each (make-bigger l lft rgt) has the property that   "
0 0 23 29 1 #"\n"
0 0 17 3 58
#";  \342\200\223 the label of l is bigger than all the labels in lft"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";  \342\200\223 the label of l is smaller than all the labels in rgt"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; ord-lb-contains? : OrdLegoBldg Number -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; sees if the building contains a this label"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 7 #")      "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 4 #"true"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"               [("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 18 #"))]               "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 17 3 39 #";(> (lego-label (bigger-lego b)) label)"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 7 #"))])]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 8H"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";; OrdLegoBldg -> [Listof Symbol]"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; builds a sorted list of all of the colors in the building"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 3 #"()]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 10 #"lego-color"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 2 #",@"
0 0 23 3 1 #"("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 10 #"lego-color"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 27 3 2 #",@"
0 0 23 3 1 #"("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 3 #"())"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 3 #"red"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 1 #" "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 14 3 5 #"green"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"colors-in-order"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 20 3 2 #"80"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 58
#"                                                         ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 58
#"                                                         ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 9 #"make-lego"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 6 #"yellow"
0 0 23 3 1 #" "
0 0 14 3 4 #"blue"
0 0 23 3 1 #" "
0 0 14 3 3 #"red"
0 0 23 3 1 #" "
0 0 14 3 6 #"purple"
0 0 23 3 1 #" "
0 0 14 3 6 #"orange"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 9H"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"ALREADY-EXISTS"
0 0 23 3 1 #" "
0 0 19 3 27 #"\"Label already in building\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; grow-ord-lb: Lego OrdLegoBldg  -> OrdLegoBldg"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; adds a lego to the building if the building can accept it"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"grow-ord-lb"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"grow-ord-lb"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sanitize"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #") "
0 0 14 3 1 #"b"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"grow-ord-lb"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 4 #" )) "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; sanitize: Number OrdLegoBldg -> OrdLegoBldg"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; throws an error if the label is in the tree. returns the tree oth"
 #"erwise"
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sanitize"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sanitize"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 16 #"ord-lb-contains?"
0 0 23 3 1 #" "
0 0 14 3 5 #"label"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 14 3 14 #"ALREADY-EXISTS"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sanitize"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sanitize"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 2 #") "
0 0 14 3 14 #"ALREADY-EXISTS"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; grow-ord-lb: Lego OrdLegoBldg -> OrdLegoBldg"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; adds a lego to the building."
0 0 23 29 1 #"\n"
0 0 17 3 59
#";; building must not already contain a lego with that label"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 4 #"lego"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"lego?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 11 #"branch-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"bigger?"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 4 #")   "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 4 #")) ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 11 #"make-bigger"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #" ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 13 #"))]          "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 17 3 36 #";;(< (lego-label (bigger-lego b)) l)"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 11 #"make-bigger"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 11 #"bigger-lego"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 11 #"bigger-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 4 #"lego"
0 0 23 3 2 #" ("
0 0 14 3 12 #"bigger-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 12 #")))])]))    "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 3 #" ) "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 11 #"green-brick"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 1 #" "
0 0 14 3 11 #"green-brick"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; branch-lego: Lego Lego -> OrdLegoBldg"
0 0 23 29 1 #"\n"
0 0 17 3 55 #";; makes a building out of a parent lego and child lego"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"branch-lego"
0 0 23 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 1 #" "
0 0 14 3 5 #"child"
0 0 23 3 2 #") "
0 0 14 3 2 #".."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"branch-lego"
0 0 23 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 1 #" "
0 0 14 3 5 #"child"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 5 #"child"
0 0 23 3 3 #") ("
0 0 14 3 10 #"lego-label"
0 0 23 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 1 #" "
0 0 14 3 5 #"child"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 17 3 43 #";( (lego-label child) (lego-label parent)) "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #"  "
0 0 14 3 5 #"child"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"branch-lego"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"branch-lego"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 14 3 11 #"green-brick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-bigger"
0 0 23 3 1 #" "
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 14 3 11 #"green-brick"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";; Problem 10H"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; build-ord-lb : [Listof Lego] -> OrdLegoBldg"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; builds a binary search tree from the list"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; note - two different trees can represent the same data."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"build-ord-lb"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 23 3 1 #" "
0 0 14 3 8 #"grow-ord"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 1 #" "
0 0 14 3 3 #"lol"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"build-ord-lb"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 9 #"red-brick"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 10 #"blue-brick"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 11 #"green-brick"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 10 #"rgb-bigger"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; Extra Credit Problem 1 and 2 shared testing data/helper functions"
 #":"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"word1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"word2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"attr1"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"attr2"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"loa1"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 5 #"attr1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 5 #"attr2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"word1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 4 #"loa1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"word1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 4 #"loa1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"item3"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"item4"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 4 #"loa1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; attribute? : Any -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; is the given value a valid attribute?"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 7 #"string?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"not-list\""
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 19 3 12 #"\"not-symbol\""
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 11 #"some-symbol"
0 0 23 3 1 #" "
0 0 14 3 10 #"not-string"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 11 #"some-symbol"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"string!\""
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; x-enum-has-attributes? : XEnum.v2 -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; checks if the enum has attributes"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 22 #"x-enum-has-attributes?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 22 #"x-enum-has-attributes?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 10 #"attribute?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 22 #"x-enum-has-attributes?"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 11 #"some-symbol"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"string!\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                     "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 17 #"some-other-symbol"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"string2!\""
0 0 23 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; x-word? : Any -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; determines if the value is a valid x-word"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 7 #"string?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 8 #"))))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 8 #"not-word"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 1 #" "
0 0 14 3 8 #"not-list"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 19 3 12 #"\"not-symbol\""
0 0 23 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 8 #"not-text"
0 0 23 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 23 3 3 #")  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 14 3 10 #"not-string"
0 0 23 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"string!\""
0 0 23 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; Extra Credit Problem 1 - Exercise 309 from HtDP/2e"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; count-hello-xenum : XEnum.v2 -> Number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"count-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 22 #"x-enum-has-attributes?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-attr-list"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 14 #"))            "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 21 #"count-hello-item-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 30 #")))]                          "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 21 #"count-hello-item-list"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 5 #")])))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"count-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum1"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"count-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum2"
0 0 23 3 2 #") "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 55 #";; count-hello-attr-list : [Listof Attribute] -> Number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 3 #"sum"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 4 #"loa1"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; count-hello-attr : Attribute -> Number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"1"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 5 #"attr1"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 5 #"attr2"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; count-hello-item-list : [Listof XItem.v2] -> Number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-item-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"i"
0 0 23 3 1 #" "
0 0 14 3 3 #"sum"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 3 #"sum"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-item"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-item-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 3 #")) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; count-hello-item : XItem.v2 -> XItem.v2"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-item"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 14 #"))            "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 17 #"count-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 11 #")]         "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 7 #"x-word?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 15 #")))            "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 17 #"count-hello-xword"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 13 #")))]         "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 15 #"))))           "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 21 #"count-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 17 #"count-hello-xenum"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 12 #")))]        "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 17 #"count-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 5 #")])))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item3"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 16 #"count-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item4"
0 0 23 3 2 #") "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; count-hello-xword : XWord.v2 -> Number"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"count-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"1"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"count-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 5 #"word1"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"count-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 5 #"word2"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; Extra Credit Problem 2"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; Exercise 310. Design a program that replaces all occurrences "
0 0 23 29 1 #"\n"
0 0 17 3 5 #";; of"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"hello\""
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 5 #"\"bye\""
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 13 #"enumeration. "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; replace-hello-xenum : XEnum.v2 -> Xenum.v2"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; replaces all instances of the String \"hello\" with \"bye\""
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 22 #"x-enum-has-attributes?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 14 #"))            "
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 23 #"replace-hello-item-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 31 #"))))]                          "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-item-list"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 6 #"))])))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 3 #"  ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 5 #"enum2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; replace-hello-attr-list : [Listof Attribute] -> [Listof Attribute"
 #"]"
) 0 0 23 29 1 #"\n"
0 0 17 3 52 #";; replaces all instances of hello in each attribute"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"a"
0 0 23 3 3 #") ("
0 0 14 3 18 #"replace-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 3 #")) "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                              "
0 0 20 3 1 #"'"
0 0 23 3 2 #"(("
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 6 #"))))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                              "
0 0 20 3 1 #"'"
0 0 23 3 2 #"(("
0 0 14 3 7 #"replace"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 6 #"))))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 5 #"\"bye\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; replace-hello-attr : Attribute -> Attribute"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; if the atrribute's value is hello replace with bye"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-attr"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 3 #")  "
0 0 19 3 5 #"\"bye\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 1 #"a"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-attr"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-attr"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 7 #"replace"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 5 #"\"bye\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 67
#";; replace-hello-item-list : [Listof XItem.v2] -> [Listof XItem.v2]"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-item-list"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"i"
0 0 23 3 3 #") ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 3 #")) "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 23 #"replace-hello-item-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; replace-hello-item : XItem.v2 -> XItem.v2"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; replaces all instance of \"hello\" in the item with \"bye\""
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 7 #"content"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 14 #"))            "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 14 3 2 #"li"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 19 #"replace-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 12 #"))]         "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 7 #"x-word?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 15 #")))            "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 14 3 2 #"li"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 19 #"replace-hello-xword"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 13 #")))]         "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 10 #"attribute?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 7 #"x-word?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 15 #"))))           "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 14 3 2 #"li"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 23 #"replace-hello-attr-list"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 13 #"content-right"
0 0 23 3 12 #")))]        "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 14 3 2 #"li"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 23 3 1 #"("
0 0 14 3 19 #"replace-hello-xenum"
0 0 23 3 1 #" "
0 0 14 3 12 #"content-left"
0 0 23 3 6 #"))])))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"replace-hello-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"item4"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ol"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"li"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"no-replace"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"word"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; replace-hello-xword : XWord.v2 -> XWord.v2"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; replaces the text in the XWord.v2 with \"bye\" if it is \"hello\""
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xword"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xword"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 6 #"))))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 11 #"\"not-hello\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 2 #" ("
0 0 14 3 19 #"replace-hello-xword"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 6 #"))))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 5 #"\"bye\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; get-text: XWord.v2 -> String"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; retrieves the text from an XWord.V2"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 1 #" "
0 0 14 3 5 #"xword"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 1 #" "
0 0 14 3 5 #"xword"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"xword"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-text"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 4 #"word"
0 0 23 3 3 #" (("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"bye\""
0 0 23 3 5 #")))) "
0 0 19 3 5 #"\"bye\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #"; Extra Credit Problem 4 - Exercise 326"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 8 #"employee"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 4 #"wage"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; An Employee is a (make-employee String Number Number)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-employee"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #" "
0 0 20 3 3 #"001"
0 0 23 3 1 #" "
0 0 20 3 4 #"8.50"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-employee"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #" "
0 0 20 3 3 #"002"
0 0 23 3 1 #" "
0 0 20 3 5 #"12.50"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e3"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-employee"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #" "
0 0 20 3 3 #"003"
0 0 23 3 1 #" "
0 0 20 3 5 #"22.00"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 5 #"punch"
0 0 23 3 2 #" ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 5 #"hours"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; A Punch is a (make-punch Number Number)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-punch"
0 0 23 3 1 #" "
0 0 20 3 3 #"001"
0 0 23 3 1 #" "
0 0 20 3 2 #"18"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c2"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-punch"
0 0 23 3 1 #" "
0 0 20 3 3 #"002"
0 0 23 3 1 #" "
0 0 20 3 2 #"29"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"c3"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-punch"
0 0 23 3 1 #" "
0 0 20 3 3 #"003"
0 0 23 3 1 #" "
0 0 20 3 2 #"55"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"wage"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 3 #"pay"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; A Wage is a (make-wage String Number)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"w1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-wage"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 23 3 1 #" "
0 0 20 3 3 #"153"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"w2"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-wage"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 23 3 1 #" "
0 0 20 3 5 #"362.5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"w3"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-wage"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 23 3 1 #" "
0 0 20 3 4 #"1210"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; wages*.v3 : [Listof Employee] [Listof Punch] -> [Listof Wage]"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; makes a list of associated wages"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 1 #" "
0 0 14 3 11 #"employee-id"
0 0 23 3 3 #") ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #" "
0 0 14 3 8 #"punch-id"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 3 #"() "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()) "
0 0 20 3 1 #"'"
0 0 23 3 3 #"())"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"()"
0 0 20 3 1 #"'"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e3"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c3"
0 0 23 3 3 #")) "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"w1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"w2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"w3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"wages*.v3"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e3"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c3"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 3 #")) "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"w1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"w2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"w3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; wages-helper : [Listof Employee] [List of Punch] -> [Listof Recor"
 #"d]"
) 0 0 23 29 1 #"\n"
0 0 17 3 67
#";; takes in sorted lists, must be parallel, makes a list of records"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"bad input\""
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 3 #") ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"bad input\""
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 3 #") ("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-wage"
0 0 23 3 2 #" ("
0 0 14 3 13 #"employee-name"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 11 #"punch-hours"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 13 #"employee-wage"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 20 #"))))                "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"loe"
0 0 23 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lop"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 3 #"() "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()) "
0 0 20 3 1 #"'"
0 0 23 3 3 #"())"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 2 #"()"
0 0 20 3 1 #"'"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"wages-helper"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e3"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c3"
0 0 23 3 3 #")) "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"w1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"w2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"w3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; [Listof X] [X -> Number] -> [Listof X]"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; sorts a list of x based on the field with getter f"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; QuickSort (generative recursion)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 5 #"local"
0 0 23 3 3 #" [("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"pivot"
0 0 23 3 2 #" ("
0 0 14 3 1 #"f"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"less"
0 0 23 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"e"
0 0 23 3 3 #") ("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #") "
0 0 14 3 5 #"pivot"
0 0 23 3 3 #")) "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"same"
0 0 23 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"e"
0 0 23 3 3 #") ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #") "
0 0 14 3 5 #"pivot"
0 0 23 3 3 #")) "
0 0 14 3 1 #"l"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"greater"
0 0 23 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 23 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"e"
0 0 23 3 3 #") ("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #") "
0 0 14 3 5 #"pivot"
0 0 23 3 3 #")) "
0 0 14 3 1 #"l"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 6 #"append"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 14 3 4 #"less"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 14 3 4 #"same"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 14 3 7 #"greater"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e3"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 2 #") "
0 0 14 3 11 #"employee-id"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"e3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c3"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 2 #") "
0 0 14 3 8 #"punch-id"
0 0 23 3 2 #") "
0 0 20 3 1 #"`"
0 0 23 3 1 #"("
0 0 27 3 1 #","
0 0 14 3 2 #"c1"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c2"
0 0 23 3 1 #" "
0 0 27 3 1 #","
0 0 14 3 2 #"c3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"my-sort"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 14 3 8 #"identity"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 23 3 1 #"("
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #"))"
0           0
