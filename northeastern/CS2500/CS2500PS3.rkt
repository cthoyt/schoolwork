#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 3514 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |Problem "
 #"Set #3|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#"
 #"t constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 10 #";;Authors:"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";;Charles Hoyt"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";;Aaron Kubala"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;Problem Set 3 Honors"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;PROBLEM 1 PART 1"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"dist"
0 0 23 3 2 #" ("
0 0 14 3 5 #"yards"
0 0 23 3 1 #" "
0 0 14 3 4 #"feet"
0 0 23 3 1 #" "
0 0 14 3 6 #"inches"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; A Distance is a structure:"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";    (make-dist Number Number Number)"
0 0 23 29 1 #"\n"
0 0 17 3 63
#"; interpretation: (make-dist y f i) is the distance between two"
0 0 23 29 1 #"\n"
0 0 17 3 45 #"; points expressed in yards, feet, and inches"
0 0 23 29 1 #"\n"
0 0 17 3 14 #"; Constraints:"
0 0 23 29 1 #"\n"
0 0 17 3 29 #"; \342\200\223 yards is greater than 0"
0 0 23 29 1 #"\n"
0 0 17 3 36 #"; \342\200\223 feet is always between 0 and 2"
0 0 23 29 1 #"\n"
0 0 17 3 39 #"; \342\200\223 inches is always between 0 and 11"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";;signature: absolute: Distance -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 68
#";;purpose: this function computes the physical distance represented "
0 0 23 29 1 #"\n"
0 0 17 3 41 #";;         by a Distance object in inches"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";;header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"absolute"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;examples"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; e1 -> 1 * 36 in + 1 * 12 in + 1 in = 59 in"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; e2 -> 2 * 36 in + 1 * 12 in + 3 in = 88 in"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;template:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"dist-template"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 10 #"dist-yards"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 9 #"dist-feet"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 11 #"dist-inches"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;code:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"absolute"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 2 #"36"
0 0 23 3 2 #" ("
0 0 14 3 10 #"dist-yards"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 2 #" ("
0 0 14 3 9 #"dist-feet"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 4 #")) ("
0 0 14 3 11 #"dist-inches"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;test:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"absolute"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 2 #") "
0 0 20 3 2 #"49"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"absolute"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 2 #") "
0 0 20 3 2 #"88"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;PROBLEM 1 PART 2"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";;signature:  plus1: Distance -> Distance"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";;purpose: adds one inch to the distance. Carries places if necessar"
 #"y"
) 0 0 23 29 1 #"\n"
0 0 17 3 9 #";;header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"plus1"
0 0 23 3 1 #" "
0 0 14 3 6 #"a-dist"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;examples"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e3"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e4"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"11"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; e1 (make-dist 1 1 1) -> (make-dist 1 1 2)"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; e2 (make-dist 2 1 4) -> (make-dist 2 1 5)"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; e3 -> (make-dist 2 2 0)"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; e4 -> (make-dist 5 0 0)                      "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";;code (template already made)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"plus1"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-dist"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 10 #"dist-yards"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"dist-feet"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"dist-inches"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #")) "
0 0 20 3 2 #"12"
0 0 23 3 3 #")) "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 6 #"modulo"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"dist-feet"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"dist-inches"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #")) "
0 0 20 3 2 #"12"
0 0 23 3 3 #")) "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 6 #"modulo"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"dist-inches"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 3 #")) "
0 0 20 3 2 #"12"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;test:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"plus1"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"plus1"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"plus1"
0 0 23 3 1 #" "
0 0 14 3 2 #"e3"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"plus1"
0 0 23 3 1 #" "
0 0 14 3 2 #"e4"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-dist"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;PROBLEM 1 PART 3"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; signature: dist->string: Distance -> String"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";; purpose: represent the given distance in a readable string"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"dist->string"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;examples"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; e1 -> \"1yd. 1' 2''\""
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"dist->string"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 10 #"dist-yards"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 19 3 6 #"\"yd. \""
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 9 #"dist-feet"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 19 3 4 #"\"' \""
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 14 #"number->string"
0 0 23 3 2 #" ("
0 0 14 3 11 #"dist-inches"
0 0 23 3 1 #" "
0 0 14 3 10 #"a-distance"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 19 3 4 #"\"''\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"dist->string"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 2 #") "
0 0 19 3 13 #"\"1yd. 1' 1''\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;PROBLEM 2"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";;We're looking a at a world that has 2 mouse clicks and a time"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #" ("
0 0 14 3 2 #"p1"
0 0 23 3 1 #" "
0 0 14 3 2 #"p2"
0 0 23 3 1 #" "
0 0 14 3 4 #"time"
0 0 23 3 1 #" "
0 0 14 3 8 #"max-time"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";;A World is a (make-world Posn Posn Number) where:"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";; -the first Posn represnts the first mouse click"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";; -the second Posn represnts the second mouse click"
0 0 23 29 1 #"\n"
0 0 17 3 85
(
 #";; -the time is a positive integer representing the runtime of the p"
 #"rogram in seconds"
) 0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; -the max-time is the time in seconds at which the program termina"
 #"tes"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";;since we're doing a lot of drawing we'll define a scene"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 3 #"400"
0 0 23 3 1 #" "
0 0 20 3 3 #"400"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 109
(
 #";;we need to keep track of when the mouse is clicked so both clicks "
 #"will start as impossible, negative values"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;To-Draw Function:"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";;signature draw-world:World->Image"
0 0 23 29 1 #"\n"
0 0 17 3 109
(
 #";;purpose: represent the world with an image by drawing a point on e"
 #"ach place a mouse has been clicked so far"
) 0 0 23 29 1 #"\n"
0 0 17 3 109
(
 #";;         and a line between them if there have been two. The first"
 #" point is a solid red star. The second is"
) 0 0 23 29 1 #"\n"
0 0 17 3 91
(
 #";;         a solid blue star. Also, draw a green midpoint and a line"
 #" conecting the 3 shapes"
) 0 0 23 29 1 #"\n"
0 0 17 3 9 #";;header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;template"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"world-template"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 1 #"("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #"("
0 0 14 3 10 #"world-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #"("
0 0 14 3 14 #"world-max-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ["
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 23 3 2 #" ("
0 0 14 3 4 #"star"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ["
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 11 #"place-image"
0 0 23 3 2 #" ("
0 0 14 3 4 #"star"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 11 #"place-image"
0 0 23 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                 ("
0 0 14 3 8 #"add-line"
0 0 23 3 1 #" "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")) "
0 0 19 3 7 #"\"black\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                       "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 5 #"SCENE"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;(draw-world (make-world (make-posn -1 -1) (make-posn  -1  -1) 0 50"
 #"0)) ;;empty"
) 0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";;(draw-world (make-world (make-posn -1 -1) (make-posn  50  50) 0 50"
 #"0)) ;;empty "
) 0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";;(draw-world (make-world (make-posn 50 50) (make-posn  -1  -1) 0 50"
 #"0)) ;;red star"
) 0 0 23 29 1 #"\n"
0 0 17 3 109
(
 #";;(draw-world (make-world (make-posn 50 50) (make-posn 300 300) 0 50"
 #"0)) ;;red star blue star line green point"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";;On mouse function:"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";;click-process:World Number Number Mouse-Event -> World"
0 0 23 29 1 #"\n"
0 0 17 3 89
(
 #";;purpose: this function will store the mouse click in the first pos"
 #"n if it is still -1's"
) 0 0 23 29 1 #"\n"
0 0 17 3 56 #";;         or the second posn if the first one is filled"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;signature:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"click-process"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;template:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"click-process"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 15 3 4 #"cond"
0 0 23 3 3 #"([("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"click-process"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 11 #"mouse-event"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 5 #"world"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"               [("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #") ("
0 0 14 3 10 #"world-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 14 #"world-max-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 10 #"world-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 14 #"world-max-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 5 #"))])]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"click-process"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"not valid\""
0 0 23 3 2 #") "
0 0 14 3 13 #"initial-world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"click-process"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 2 #") "
0 0 14 3 13 #"initial-world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;On-Tick Function:"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";;tock: World->World"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";;purpose: increase the time by 1 every second"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;Signature:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tock"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tock"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 8 #"world-p1"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 8 #"world-p2"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"world-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 14 #"world-max-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;run: Number -> Big Bang"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";;the input number represents the maximum number of seconds this pro"
 #"gram can run"
) 0 0 23 29 1 #"\n"
0 0 17 3 48 #";;purpose: run the program that models problem 2"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"run-problem-2"
0 0 23 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 23 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"tock"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 8 #"on-mouse"
0 0 23 3 1 #" "
0 0 14 3 13 #"click-process"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";;ALTERNATIVELY"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";;We wrote a second way to show how the program could be stopped."
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";;it's not as elegant in design but it showcases the use of stop-whe"
 #"n"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; Stop-When Function:"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; signature: stop-if:World->boolean"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; purpose: stops the big-bang after the defined amount of time has "
 #"passed"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"stop-if"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"stop-if"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 10 #"world-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 14 #"world-max-time"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"stop-if"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 2 #"  "
0 0 20 3 2 #"-1"
0 0 23 3 2 #"  "
0 0 20 3 2 #"-1"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 3 #"   "
0 0 20 3 3 #"500"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"stop-if"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 2 #"  "
0 0 20 3 2 #"-1"
0 0 23 3 2 #"  "
0 0 20 3 2 #"-1"
0 0 23 3 2 #") "
0 0 20 3 3 #"800"
0 0 23 3 1 #" "
0 0 20 3 3 #"500"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"run-problem-2-alt"
0 0 23 3 1 #" "
0 0 14 3 7 #"i-world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 23 3 1 #" "
0 0 14 3 7 #"i-world"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"tock"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 8 #"on-mouse"
0 0 23 3 1 #" "
0 0 14 3 13 #"click-process"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 9 #"stop-when"
0 0 23 3 1 #" "
0 0 14 3 7 #"stop-if"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"            ))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;PROBLEM 3"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 8 #"carriage"
0 0 23 3 2 #" ("
0 0 14 3 4 #"line"
0 0 23 3 1 #" "
0 0 14 3 3 #"max"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";;A World is a (make-carriage String Number) where:"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; -the string represents the keys pressed so far"
0 0 23 29 1 #"\n"
0 0 17 3 105
(
 #";; -the second number represents the maximum natural number of keys "
 #"pressed before the program should end"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 16 #"initial-carriage"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 23 3 1 #" "
0 0 20 3 2 #"13"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;To Draw Function"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; signature: World->Image"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; purpose: draw the letters in the carriage"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"typewrite"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;template"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"carriage-template"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 13 #"carriage-line"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 12 #"carriage-max"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"typewrite"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 23 3 2 #" ("
0 0 14 3 4 #"text"
0 0 23 3 2 #" ("
0 0 14 3 13 #"carriage-line"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 20 3 2 #"33"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;(typewrite (make-carriage \"hi\" 13))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";;Stop-When Function"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; signature: carriage-return: World->Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 85
(
 #";; purpose: stop the big bang when there are too many letters in the"
 #" world's carriage"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"carriage-return"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"carriage-return"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 23 3 2 #" ("
0 0 14 3 13 #"carriage-line"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 12 #"carriage-max"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"carriage-return"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 15 #"carriage-return"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;Key Press Function:"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; signature: key-press: World KeyEvent->World"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; purpose: add a letter to the world's carriage"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"key-press"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;template"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"change"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 2 #"] "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"key-press"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 2 #" ("
0 0 14 3 13 #"carriage-line"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 14 3 5 #"a-key"
0 0 23 3 3 #") ("
0 0 14 3 12 #"carriage-max"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #"))] "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"problem-4"
0 0 23 3 1 #" "
0 0 14 3 3 #"max"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 23 3 1 #" "
0 0 14 3 3 #"max"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 9 #"typewrite"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 23 3 1 #" "
0 0 14 3 9 #"key-press"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 9 #"stop-when"
0 0 23 3 1 #" "
0 0 14 3 15 #"carriage-return"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"            ))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; Check Input for natural numbers"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; signature: checked-key-press: World KeyEvent - > World"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; purpose: Input is ignored if w is not a natural number"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"checked-key-press"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"checked-key-press"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 15 #"string-numeric?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 3 #") ("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 4 #")) ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 2 #" ("
0 0 14 3 13 #"carriage-line"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 2 #") "
0 0 14 3 5 #"a-key"
0 0 23 3 3 #") ("
0 0 14 3 12 #"carriage-max"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 4 #"))] "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"w"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"problem-4-challenge"
0 0 23 3 1 #" "
0 0 14 3 3 #"max"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-carriage"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 23 3 1 #" "
0 0 14 3 3 #"max"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 9 #"typewrite"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 23 3 1 #" "
0 0 14 3 17 #"checked-key-press"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 9 #"stop-when"
0 0 23 3 1 #" "
0 0 14 3 15 #"carriage-return"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"            ))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; PROBLEM 4"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; 1. A List is a recursive String container"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; pop-first-letters: List -> String"
0 0 23 29 1 #"\n"
0 0 17 3 117
(
 #";; purpose: this function consumes a list of strings and produces th"
 #"e string of all first characters in these strings"
) 0 0 23 29 1 #"\n"
0 0 17 3 9 #";; header"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"pop-first-letters"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"example-list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"sup\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"pop-first-letters"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"pop-first-letters"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 23 3 2 #" ("
0 0 14 3 10 #"string-ith"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 17 #"pop-first-letters"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"list"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; test"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"pop-first-letters"
0 0 23 3 1 #" "
0 0 14 3 12 #"example-list"
0 0 23 3 2 #") "
0 0 19 3 5 #"\"hhs\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;PROBLEM 5"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 1 #" "
0 2          19 58 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           4 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0$\0\0\0\24\b"
 #"\6\0\0\0\345z\2375\0\0\6\367IDATH\211m\226]\210]W\25"
 #"\307\177k\355}\316\271\37s\317\334\231"
 #"\314G&\231\231\214m2M\233\217\306\266&\244U\244\25\251B_\252PP\260"
 #"j\241U\213_\5E\320\227\212\17>"
 #"\371b\311\213>\210\202 \n\276\210\n"
 #"\242\17A)\265\"\212\266\265mj\323"
 #"N&\223I\247\311\314\344\316\334\217s"
 #"\316\336\313\207{\233\364\303\5\a\366>"
 #"\234\263\367\177\377\367\177\375\327\22\vf"
 #"XId\300\312\205\327\311k-&\247g\3009 \202E \322\335\355\260\272z"
 #"\211\371\205\2034\232-\2\25\0\21\17\200b\b\20\203\240\2\252`1 \2\230"
 #"1\34D0\1\0\361\30\243\327o\vOUA\242(\312\356\346&\365\34\272V"
 #"\261v\351\2[W7\310\307\232L\315\316!Y\nU\37\212\2\32\0211\303\0"
 #"\257\206\305\0f\250ST\335pe\213\210\310pG\201\30\r\25\a\22\261* "
 #"\336\363\377\302\223x\250\nVW^\245"
 #"\277u\25\323\310\331\337\376\201\177\375\345"
 #"7\354\235\231\246\263\265M{\376&N"
 #"=\360\20\222\345l\256\257\320\30\317Q"
 #"F\e\307\1\202\r\307\205\r\231U7bB\210\"\224\6\"\202\32x\25$q"
 #"D{/;\0bU\317^\374\373\263<\365\203\357\261\264o\232#KKt\326"
 #"^!\253:$\261@}\215N\21\250/,\263\276\325\345\342\345+<\364\360c"
 #"\314\378Hg{\223\335\255uz\235-vvv\300\4_k\2205sff"
 #"\3661\273\260\204kO\22\305\217.\24"
 #"$F\314\2\352\222\341\374\335\2006\376"
 #"\361;\373\366\23\217\22\212\202\211V\213\211z\306\362\315\207H$\"\6"
 #"V\31Y\263\315\v\347\236\347\225\363"
 #"\347\250\265\367\262\263\263\315\255\307O"
) 500
(
 #"0>V\247\334ZCB1\324\221x\252\312\30\24\221\332\304,\223\213\2078y"
 #"\337\3,\275\3774$c\224\6\211*\210P\331Pk\362.P\356\330\254=\271"
 #"\376\332K,\354_ U\307\302\201%\3224E\304a(\222\324\t1\222\2455"
 #"D\25\357\23\362\261:\325\265u\346&sf\362&\23\315\6y=\243\335\254\261"
 #"\267\23533\331\306\251\321\331\332\340\237"
 #"O\237%o\215SD\241\f\201f=\3Q\314\4CF`\354\6\240i\372O"
 #"^\335x\223Z\2221\336\336C\317<\351X\233^w\27\0036w:t\313\22"
 #"MR\\\322d{\247\313\240\337gr\254I\253\321B\322\6\203\240Dq\b\236"
 #"\252\350Q\24\5\346\3524\e-\3062\341\231?\377\221\254\275\2172D6.]"
 #"dvv\6u\36\25}\a\30\0\367"
 #"\343\37\375\344\311\331\305\203\354\235\236\302"
 #"\253\260\275\325\243\354\5f\3323LL"
 #"\314\21\361\\\\y\35\357=\355\2116"
 #"\246\202\306\222V-\245\325\312\211\232R"
 #"\5\206g\215\1\254B|\2.%\224\25Y\2U\f\34<q\232;\356\3710"
 #"o^^g\345\302\n\373\346\27A\4\21EDn<\26*\243\334\341\271?\375"
 #"\232?\376\352g\34\230;\314\322\376e\26\347\0261\23\6*\254]z\225\27_"
 #"8K\243\225\260\273\273\213\30\344\365\6"
 #"1VD\224h%\251\200X\211\305\210\251\303FYXKam\263C}\341."
 #">\375\365\357@\275\311\263O?\3\232"
 #"\260\177q\221\213k\353\314\316\3162="
 #"=\215\252\242\250\203$\343}\307\357$m\357cv\346&\226o>J3\e'"
 #"oL\321J\307YZX\346\360\221\343ln\254\222y\317X\275\201j$\206\202"
 #"h%\22\3\26Jb\214\230x\fG4\303,\20B`\254\331\244"
 #",zt\2677\1\345\256\223\247i\265'\370\341Sg8u\352\24"
) 500
(
 #"KKK\2349s\206\325\325U<\321\0Gs~\231{\37\372\"\253\177{\236"
 #"A\314HB\201\213\0051B\232\246T%\224\321!\222Q\205\b\241\217H\304i"
 #"\35\24b\350\217\f9\1\24\221\22U\207\205\202A/\340&\334P-\242H\342"
 #"9|\333\21>\363\271\317\343}\312\372"
 #"\372\32\307\216\35cnn\16\261*\30\2\246\212T\221\255s+l\274\3642c"
 #"a@=\21\242\301\372\e\257\363\357\347\316RV\35\232\315|t5\273\250Wz"
 #"\3\303\273\f\261\n\21E\325\23c\5V\0F\243V\343\322\326\16\371-w\363"
 #"\340#_A\233\223\230x\"\202\b\f\372\0051\224dY\206\252\342Q\359\344"
 #"\320\20\332\207\226\30ke\234\375\345O\331Y?O\226z\256m]\246\346\215f"
 #"V\a+\251B\237*T8Q\22\2478\2052x\34C\246\210\1\237\244\210\b"
 #"\375A\217n9\340\350\241[\321FkXR4\22\203C\35\244i\202\323\364z"
 #"\226\251U\361\372$\232\201\3?7\305\361{?\304\225\242\303Fg\205\244V!"
 #"R\21\212.V\366\360^\311\352\31\28\"J q\212\372\241\373\206\20\0203"
 #"\312\252\342\312n\237|\356\20\267\34\375"
 #"\0H\n\252\304\20p\372\226)\ne9\324\337\310\\\225h\21\23\20\357\200\n"
 #"\302\200\351\333o\347\304\375\37c\355\322"
 #"k\b\3\272\375M\\\303\203\367Te\211T\201L\205L\3\32z\224\305.\203"
 #"A\217\235n\301\2404\"P!\370\311\233\270\357\223\217\222\357?0\254me@"
 #"\325\r;\2\206]A\222$\250*f\206G\f\21!\216,<F\303\245\31P"
 #"\341\2329\222d\364\372\273\210B\25+"
 #"\220\214\253\235.\235n\2074\313p("
 #"iV\247\231O\322\36\237\244(\6\224\275m,\366\331\352\354p"
 #"\313\35\37g\377m'@=!F\\:dq\330\232\270\353u"
) 340
(
 #"#\3068\324\220Q\r\263\2G\0\274K\206\356Y\5\232Y\203f>M=o"
 #"\20\213kh\222pmP1\177\373i"
 #"\346o\273\223\264\336\246\336\30\303\231\260"
 #"\366\337\363\344\251'\245\317\313\317\375\225"
 #"\255\253\227\221Th\345{\206\325\0370"
 #"\247\4\"\212\16\301\274e\322\2:\322"
 #"\262\37\0217\274\277\353b\2\324\223O\314\262Y:\256]x\3\27{\354\331;"
 #"\317\332\3065N>\370A\226\357\376\b"
 #"\3300\305Q%\246m~\377\213\237\323"
 #"\271|\216\301\356\25\306\247\366\360F\247"
 #" \313\247 \b\250\273\261>7\200\274\247\334WfV\231Y\264QD\263\20J"
 #"\263\30lw\373\252=\361\205\207\255\1"
 #"\366\375o}\311\356X\310\354\310lj"
 #"\253\257\374\307bY\230\231Y\30\3758"
 #"\350\366\354\e_~\334\246\24\373\3567"
 #"\37\263&\330\224b\353\257\235\277\261\301"
 #"\350\333`\361\355\323w\204\217\243b\253"
 #"2\32`\243\226Si\344\23|\366\361"
 #"'\270\377\23\237\342\370\321#\364\263\t&'\247\231=p\20q\236~\31I\23"
 #"\2450\303\327k<\362\325\257q\317G"
 #"\357\345\364\351\223\354?|\224<\237dj\337\201!\365o-\353xG\215\177"
 #"7A\377\3\n,N\274+\227\316{\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"UFO-PIC"
0 0 23 3 1 #" "
0 2          23 58 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           6 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0002\0\0\0002\b"
 #"\6\0\0\0\36?\210\261\0\0\n+IDATh\201\355\231k\214]U\25"
 #"\307\377\353\354\363\276\217\231\271\235[J"
 #";\205\351\320v\310\320\320\22\220\250\244"
 #"\21\eD\215\375\322\220\31c\361Q \204T\2641%HR>\314\35\23M\210"
 #"_\260\261\255\21u\22H\215\231F\242"
 #"m\277\b\306\200\321h\306\22!\255c"
 #"\233>\250}\16\231\307\275w\356y\356"
 #"s\366\331~\270\367\234\316\f\5&v"
 #"\220\246\351Jv\316=\317\275~{\257\365\337\217KRJ\334\b\246|\322\16,"
 #"\226\335\4\271\336\354&\310\365f7A\2567\273a@\324\217\353\303DD\225J"
 #"\205\372\372\372hllL\2\300\340\340`\362q\325\267\350 CCCJ__"
 #"\37I)\5\0y\265{\375\375\375b"
 #"\261\353\205\224r\321\312\310\310\b\233}"
 #"\16@\35\36\0366w\357\336m\314\273N\225JEY\314\272i1\346ZDD"
 #"2\365\220(7::\272\271\275\275\375"
 #"\213\232\246\335\251(\310GQ\34{\236"
 #"\177\251V\233\376\353\251Sg~\377\330"
 #"c\217\215\1\300\300\300\0\e\31\31Y"
 #"\224\336\271f\220\331\20\373\367\357\337\274"
 #"a\303\335?\350\354,\337c\333\271\354\31!b\204a\210\231\231\6.\\\270P"
 #";{\366\354/^|\361\305\312;\357"
 #"\274\343\22\221\"\245\274\346\334Y\224\36"
 #"\1\200\227^z\351\273\17<\360\331\335]]+\341\373.\3428\21\0$\21\20"
 #"\3071|?@\20\4,\fC\252\325\2528z\364\330\237\336x\343\215\257\36:"
 #"thr1`\256I~\a\6\6\30\0l\337\276\375\221\365\353\357\336\275l\331"
 #"\255\250\327kQ\340\207\222\363\220q"
 #"\36\252A\20\250a\30\252\234\207\252\347yT\255V\205"
 #"\353\272\242T*mZ\273v\355\317[=\232\20\21\375"
) 500
(
 #"\337A\210\210\236z\352)mddD\20Q\373\375\367\3357\324}{7\34\247"
 #"\21\205A\250\205<$\3169\3020\204"
 #"\343\270\250\325j\250\327\353p=\27A"
 #"\340\263Z\255F\365z\35\252\252n\331\272u\353\327\1\240R\251hCCC\312"
 #"\377\n\264`\371\35\32\32R\320\4OZa\20\265n}~\331\362[\357\n\302"
 #"\0\256\343\252\211\224\20B\300\363\\LOW133\3\337\367\21\307qS]"
 #"\b\360\275@\251V\253\302\363<\26\206\341\327\0\274288\310\1`ppp"
 #"N]\v\35{>2G\322\360\231\257.\303\303\303\345e\313\226\225_~\371\225"
 #"\301\307\37\3376\260\252{\225l8\r\252\327gp\351\322%\214\217\217#\fC"
 #"(J\263\323\243(B\30\206\210\242\bRJ8\216#k\265\32\t!&\37|"
 #"\360\301\347V\256\\9z\374\370\361\361g\236yfr!\365/\30d\2764\16"
 #"\r\r\351\267\335v\333=\226em\324"
 #"4\355\323\272\256\257\263m\373\3667\337|\323\274\343\216\36twwcll\f"
 #"g\316\274\v\307i\300\262l\230\206\tR\bRJ\304q\214(\212\20\4\1\\"
 #"\327E\222$\3204\r\272\256c\313\226"
 #"-\260,\313u\34\347\234\20\342(\347"
 #"\374oq\34\377\345\304\211\23o\17\16"
 #"\16\306@3\234\373\373\373\225\17\2z"
 #"\37\310|\5\331\267o_\257eY\217"
 #"\350\272\276\3310\214{\332\333\333M\333"
 #"\266\241\353:\n\371\2^\377\343\3538"
 #"|\370\20V\254\350\302\271\377\234C\241X@[[\eTU\205\242( j\202"
 #"\b!\3009G\24E \"\24\213E\20\218\347x\362\311'Q*\225\340y"
 #"\368\347p]\027333\236\357\373o\5Ap\320\363\274W\267o\337~&"
 #"\5j\371='\344\346\344\310\300\300\0kM-"
 #"\360\302\v/\254\317\345rO[\226\365H\241P"
) 500
(
 #"(\345r9h\232\6\3030\244\256\353\3024M\210D(\245RI\31\35}\v"
 #"\323\323\177\300C\17=\4\0p\34\aD\224\205\25\0$I\202$I\240(\n"
 #"t]\207i\232\350\352\352BGG\a\34\307\201eY\211\256iI\222$\320u"
 #"\235\25\n\5\3330\214\215\236\347mL"
 #"\222\344\331\275{\367\2168\216\263WJ\371o\0r~\304P3\1\257P\356\334"
 #"\271\263\324\321\321\361\\.\227\373vGGG^\327u\350\272.-\313Jl\333"
 #"&\333\266\25\333\266a\30\6j\265\32&''\3418\16\216\349\202\303\207\17"
 #"\343\370\361\343X\263f\r:;;a\30\6\210(\v)\306\30\272\273\273\321\327"
 #"\327\207\365\353\327\243\\.cjj\nB\btuu\241P( \fB\270\236"
 #"\v\317\363\22\317\363\244\357\373J\24E"
 #"\3049G\265Z\255\271\256\273{||\374\307{\366\354qf\303\244\0\22\0v"
 #"\354\330\3619\313\262~Z*\225\326\265\342WX\226\2259o\232&l\333\206e"
 #"Y\260,\v\0P\257\327\3019\a\21abb\2\247N\235\302\351\323\247q\356"
 #"\3349\324\353uH)\221\313\345\320\323"
 #"\323\203\336\336^\254Z\265\n\345r9{\2271\206[n\271\5\266mC\b\1"
 #"\337\367\341y\36\202 \200\347y\351y"
 #"\342\373\276\344\234\263\26\320\21\307q\236"
 #"\336\267o\337h*\327Y\216<\372\350"
 #"\243\333\362\371\374\317\212\305\242\241\252j"
 #"l\232\246b\333\266b\232&,\313\302"
 #"\354c\372\333\262,h\232\206(\212 \204\0c\fRJ\4A\200 \b\3009"
 #"G\222$`\214\3014L\350\206\16\0"
 #"\231\24\247\215\223$\t\3020\204\357\373"
 #"\331\273\276\357\277\357\334\363<\341\373>"
 #"\204\20lff\246\21\4\301\23\373\367\357?@D\244\2\300\246M"
 #"\233\36/\227\313\277l\351}d\232\246\3069\a\347\34\246i!\f\303"
) 500
(
 #",\256\r\303\310\216\255\234\201eY`"
 #"*\313r\300\262,\330\266\r\340\312\354:I\222t\346\vM\323\0004%\331q"
 #"\234\f:\f\303\254\4A\220\35g\25\326:FB\210B\265Z\375Mkf0"
 #"B\273v\355\372\362k\257\275\366\252\357"
 #"\373\346\222%K\342R\251\244\246-\245"
 #"\353:\f\303\200a\30\331\357V\316d\322\251\252*TU\205\246iPU\25\214"
 #"10\306\262dOUk6P*\305Q\24!\216\3439\347)P\332\220\363\341"
 #"\\\327E\243\321\300\304\304Dd\232\246"
 #"\266a\303\206\372\346\315\233\277B\303\303"
 #"\303\243a\30~\352\330\261c\361\305\213"
 #"\27\225\363\347\317+\0`\3336\n\205"
 #"\2\322\304N\301R\210\324\361\331\3163"
 #"\306\240(J\0060\333\346\303\b!\262\222\202\304q\234\1p\316\233=\25r8"
 #"\256\3\337\367\341\272.,\313B[["
 #"\e\272\273\273\223\245K\227\306==="
 #"\272\357\373G\250R\251\334o\30\306P>\237\377R\"\22x\276'&''1"
 #"==\315\246\246\246\3408\16\3020\4\200\f$\205I\303K\323u\250-\210\24"
 #"\206\210\346\300\244\20\251\363\363{&\35"
 #"c8\347\340!\207HD&\337\245R\t\266m\243\243\243\3\305b1)\26\213"
 #"\t\21\251A\20\240\321h\274\255(\312"
 #"\256T~\325\235;w\356\b\303\360\331r\271\274L\32340\306\4\201 \22\241"
 #"\4A@\251\2228\2163\247\305\322i"
 #"Gk\260\312\362\240\365\335+\327\b\200"
 #"\304\34\270\2647M\323D\253N\344r\271\254\201t]\207eY\351\340*\242("
 #"\222\216\343\250A\20`||\334\213\242"
 #"h\337\301\203\a\177(\245\254R\177\177"
 #"\177\246\305\e7n\354\341\234\177\307\262"
 #"\254o\344\363\371\316%K\226\3004M\264\265\267\t\3230\t\0\231\246I"
 #"\252\252f\352\223&o\332\322\251\0243\306\20\3071\204\20H\237\227RB"
) 500
(
 #"U\325\f0I\222\354\2306D:?\363<Oz\236'\3438\226\325j\225\371"
 #"\276\217\211\211\tLMM\371\247O\237\376-\200\237H)\217\244\3y\332#J"
 #"\177\177?e\203\v\321\32\0[\1\f\0\350\323u\35\345r\31\305b\21\35\35"
 #"\35\3224\315\304\266m\330\266M\272\256"
 #"+\271\\.s.\235\232\350\272\236\345\2c\fB4\aa\3169\3428\316$"
 #"W\b\201\231\306\214\f\203P\266Z\34"
 #"\215F\203j\265\232\342y\36\32\215F"
 #"\332\201\347\0\374\16\300+)\300\234\351"
 #"\312\354$\354\357\357\237\277y\320\16`\v\200_\18\t i\6\310\234r\265"
 #"k\v-\t\200\370C\356\237\ap\200"
 #"1\266\255\267\267w\371<\337\346\370z"
 #"\325\331/\02114\327\35\331\315\25+Vt\326\353\365{%\321g\220$\367J"
 #"){\223$\351b\214Y\0\20E\221$\"J\307\213T\235\322\220!R@\204"
 #"L\f\204\20\tcL\1\220\2161\2341vY\bqRU\325\1772\306\376^"
 #",\26\377q\361\342\305\363\37\345\e\360"
 #"\21\353\21\"R\320L\323\367\277H\264\24\300R\0\337SU\365\211$\21H\22"
 #"\31\2435\21M\363\"\265T\261Z\26\21\221\326\2\332\3\340\317\0.\1x\27"
 #"\300\245\253\324\305\232\237\370\340u\375\202"
 #"7\37ZP\263W\210\331uM\323\206\273\272V|3\227\313\203s.<\317\223"
 #"BDJ\222\200\232o\0\212\2\311\230"
 #"\226\330\266\255\30\206\2564\32\16.\\\270\360|\24E?\272J]\4 u~"
 #"A\333E\v^\352\266\234OfUDh\306iDD\333x\34\235XY*}"
 #"\177\371\362\345m\315\te\263\a\244D+\244T\"\202\342y\36._\36?\353"
 #"\272\336\363Q\24\375\272\365=\25Wv%\323\226\217\27\352\e\2608"
 #"\373Z\331B\214\210\356z\370\341\207\277\265r\345\212/\24\n\305\265"
) 160
(
 #"\371|\336VU\25Q\24\303\367\375z\243\3218\372\336{\357\35:x\360\340+"
 #"R\312\313\363\337\277&?\26k\247\21\263VmDT\\\275z\365\352u\353\356"
 #"\354\264\355\242\352\272.?y\362_\227"
 #"\307\306N\235\224R\362\3263l\241a\263 [\314\375W4\343\232>\354\231J"
 #"\245\242`\236t.FY\264\235\306\331"
 #"\226\16\260\363\257\378p\340C\225\347"
 #"\232\352\3748@>\t\273a\376\261\272\tr\275\331M\220\353\315n\202\\o"
 #"v\303\200\374\27\300Hw3\326\202\b!\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 3 #"600"
0 0 23 3 1 #" "
0 0 20 3 3 #"600"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 10 #"x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 10 #"move-right"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 6 #"desert"
0 0 23 3 2 #" ("
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"initial-desert"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-desert"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 3 #"300"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 3 #"300"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; A UFO is a (make-posn Number Number) where:"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; - the numbers are the X,Y position of the UFO's left top corner r"
 #"espectively"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; - we will draw it using place-image to work with the topleft as t"
 #"he origin"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; A Cow is a (make-scroller Number Boolean) where:"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; - the number represents the leftmost X value of the Cow"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; - draw using place-image to work with the topleft as the origin"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";; - the boolean represents that if true, the cow is moving right"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";;                              if false, the cow is moving left"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; A World is a (make-desert UFO Cow)"
0 0 23 29 1 #"\n"
0 0 17 3 97
(
 #";; that contains the information for the locations of the UFO and Co"
 #"w on the CRIME-SCENE constant"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; signature: descend-ufo:UFO Number -> UFO"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";; purpose: moves a UFO down by some fixed amount."
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";;  makes a new UFO with the same x value but adds the Number value "
 #"to the old Y "
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"descend-ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-y"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; template"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"ufo-template"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 2 #".."
0 0 23 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"descend-ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-y"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"descend-ufo"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"55"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"descend-ufo"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #") "
0 0 20 3 2 #"-5"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"45"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; signature: scroll-UFO: UFO Number -> UFO"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; purpose: moves a UFO either left or right by some fixed amount."
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";;  adds the Number to the old UFO's x value and makes a new one wit"
 #"h the same Y"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-ufo"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 2 #"55"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; signature: move-Cow: Cow Number -> Cow"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; purpose: moves a Cow in the direction it is going by some fixed a"
 #"mount."
) 0 0 23 29 1 #"\n"
0 0 17 3 60
#";;  adds the Number to the Cow's x value and makes a new Cow"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"move-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cow-template"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 21 #"x-scroller-move-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"move-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 21 #"x-scroller-move-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 14 3 7 #"delta-x"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 14 3 7 #"delta-x"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 21 #"x-scroller-move-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"move-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #" ) "
0 0 20 3 1 #"5"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 2 #"55"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #" ))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"move-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 2 #"45"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; signature: edge?: Cow Image-> Cow"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";; purpose: determines if a Cow is at the edge of the screen."
0 0 23 29 1 #"\n"
0 0 17 3 45 #";;  the Image is the scene that the cow is on"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";;  if the cow x+half cow width equals the width of the scene, flip-"
 #"cow"
) 0 0 23 29 1 #"\n"
0 0 17 3 55 #";;  if the cow x-half cow width equals 0, then flip-cow"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 3 #") ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 4 #")) ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 5 #")))) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 2 #"-5"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; signature: flip-cow: Cow->Cow"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; purpose: flips the direction of a Cow."
0 0 23 29 1 #"\n"
0 0 17 3 54 #";;  makes a new Cow with the same x and NOT move-right"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"flip-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"flip-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 3 #") ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 21 #"x-scroller-move-right"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"flip-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 4 #")) ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"flip-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 4 #")) ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; signature: scroll-Cow: Cow Number->Cow"
0 0 23 29 1 #"\n"
0 0 17 3 161
(
 #";; purpose:  moves a Cow in the direction by given Number units it i"
 #"s going, unless it at the edge, in which case, the Cow should flip d"
 #"irections, and then move."
) 0 0 23 29 1 #"\n"
0 0 17 3 51 #";;  if edge flip, and always move a constant amount"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 7 #"delta-x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"move-cow"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"edge?"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 8 #"flip-cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 14 3 7 #"delta-x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #") ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; signature: capture?: UFO Cow -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; purpose: determines if a UFO has captured a Cow."
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; true if the x range of the UFO overlaps with the x range of the c"
 #"ow"
) 0 0 23 29 1 #"\n"
0 0 17 3 34 #";;   and the y ranges match up too"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; pseudo-template/header"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"capture?"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 1 #" "
0 0 14 3 3 #"top"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 4 #"left"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 1 #" "
0 0 14 3 4 #"left"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 3 #") ("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 4 #"left"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 2 #".."
0 0 23 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"capture?"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 2 #" ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 4 #")  ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 7 #"UFO-PIC"
0 0 23 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #") ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 3 #") ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 3 #") ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"UFO-PIC"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 3 #") ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 1 #" "
0 0 14 3 3 #"cow"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 85
(
 #";; tests (some removed becasue hard coded value are invalid after up"
 #"dating the images"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 8 #"capture?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 15 #"make-x-scroller"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; (check-expect (capture? (make-posn 0 561) (make-x-scroller 0 true"
 #")) true)"
) 0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; (check-expect (capture? (make-posn 0 540) (make-x-scroller 0 true"
 #")) true)"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; (check-expect (capture? (make-posn 0 540) (make-x-scroller 25 tru"
 #"e)) true)"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; signature: crashed?: UFO -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; purpose: determines if a UFO has crashed on the ground."
0 0 23 29 1 #"\n"
0 0 17 3 52 #";;  where the Image is the scene on which the UFO is"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";;  true if UFO's y pos = the height of the scene"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; pseudo-template/header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"crashed?"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"bottom"
0 0 23 3 1 #" "
0 0 14 3 2 #"of"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #" "
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 5 #"scene"
0 0 20 3 1 #"'"
0 0 14 3 1 #"s"
0 0 23 3 1 #" "
0 0 14 3 6 #"height"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;code  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"crashed?"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 1 #" "
0 0 14 3 3 #"ufo"
0 0 23 3 3 #") ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 7 #"UFO-PIC"
0 0 23 3 4 #")) ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; test"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";(check-expect (crashed? (make-posn 0 0)) false)"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";(check-expect (crashed? (make-posn 0 (image-height CRIME-SCENE))) t"
 #"rue)"
) 0 0 23 29 1 #"\n"
0 0 17 3 99
(
 #";(check-expect (crashed? (make-posn 0 (- (image-height CRIME-SCENE) "
 #"(image-height COW-PIC)))) true)"
) 0 0 23 29 1 #"\n"
0 0 17 3 102
(
 #";(check-expect (crashed? (make-posn 0 (- (image-height CRIME-SCENE) "
 #"(image-height COW-PIC) 1))) false)"
) 0 0 23 29 1 #"\n"
0 0 17 3 49 #";(check-expect (crashed? (make-posn 0 650)) true)"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";(check-expect (crashed? (make-posn 0 580)) true)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; signature: game-over?: World -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 85
(
 #";; purpose:  determines if the game is over based on the locations o"
 #"f the cow and ufo"
) 0 0 23 29 1 #"\n"
0 0 17 3 40 #";;  game is over if crashed? or capture?"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; header"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; template"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"process-world"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 3 #"..."
0 0 23 3 1 #"("
0 0 14 3 9 #"world-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 9 #"world-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 8 #"capture?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 10 #"desert-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 8 #"crashed?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; tests are pretty self-explanatory"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; Key Press Function:"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; signature: game-control: World KeyEvent -> World"
0 0 23 29 1 #"\n"
0 0 17 3 142
(
 #";; purpose: this function processes key presses and causes the world"
 #"'s ufo to move a certain value if the left or right arrow keys are p"
 #"ressed"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"game-control"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"game-control"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 23 3 3 #")  "
0 0 14 3 3 #"..."
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"game-control"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 23 3 4 #")  ("
0 0 14 3 11 #"make-desert"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-ufo"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 20 3 3 #"-10"
0 0 23 3 3 #") ("
0 0 14 3 10 #"desert-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 23 3 3 #") ("
0 0 14 3 11 #"make-desert"
0 0 23 3 2 #" ("
0 0 14 3 10 #"scroll-ufo"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 3 #") ("
0 0 14 3 10 #"desert-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; To Draw Function"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; signtaure: draw-desert: World -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; purpose: draw a cow and a ufo"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"draw-desert"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 2 #".."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"draw-desert"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 7 #"UFO-PIC"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 2 #" ("
0 0 14 3 12 #"x-scroller-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #") ("
0 0 14 3 12 #"image-height"
0 0 23 3 1 #" "
0 0 14 3 7 #"COW-PIC"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 11 #"CRIME-SCENE"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; On Tick Function:"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; signature: desert-tick: World -> World"
0 0 23 29 1 #"\n"
0 0 17 3 90
(
 #";; purpose: on each tick the ufo should descend and the cow should s"
 #"croll a certain amount"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"desert-tick"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"desert-tick"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-desert"
0 0 23 3 2 #" ("
0 0 14 3 11 #"descend-ufo"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 20 3 1 #"7"
0 0 23 3 3 #") ("
0 0 14 3 10 #"scroll-cow"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 20 3 1 #"7"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; Last Picture Function:"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; signature: outcome: World -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; purpose: to display whether the game was won or lost after it end"
 #"s"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";; header:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"outcome"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";;code"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"outcome"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"capture?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"desert-ufo"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 3 #") ("
0 0 14 3 10 #"desert-cow"
0 0 23 3 1 #" "
0 0 14 3 5 #"world"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"WIN\""
0 0 23 3 1 #" "
0 0 20 3 2 #"24"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"LOSE\""
0 0 23 3 1 #" "
0 0 20 3 2 #"24"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;Run game"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 23 3 1 #" "
0 0 14 3 14 #"initial-desert"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 11 #"desert-tick"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 9 #"stop-when"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 23 3 1 #" "
0 0 14 3 7 #"outcome"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 6 #"on-key"
0 0 23 3 1 #" "
0 0 14 3 12 #"game-control"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 11 #"draw-desert"
0 0 23 3 2 #"))"
0           0
